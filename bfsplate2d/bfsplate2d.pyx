#cython: boundscheck=False
#cython: wraparound=False
#cython: cdivision=True
#cython: nonecheck=False
#cython: infer_types=False
import numpy as np
cimport numpy as np

ctypedef np.int64_t cINT
INT = np.int64
ctypedef np.double_t cDOUBLE
DOUBLE = np.float64
cdef cINT DOF = 6
cdef cINT num_nodes = 4
KC0_SPARSE_SIZE = 576
KG_SPARSE_SIZE = 256
M_SPARSE_SIZE = 288

cdef class BFSPlate2D(object):
    """
    Nodal connectivity for plate element
    similar to Nastran's CQUAD4

      ^ y (circumferential direction)
      |

     4 ________ 3
      |       |
      |       |   --> x (axial direction)
      |       |
      |_______|
     1         2

    """
    cdef public cINT n1, n2, n3, n4
    cdef public cINT c1, c2, c3, c4
    cdef public cINT init_k_KC0, init_k_KG, init_k_M
    cdef public double lex, ley, rho, h
    cdef public cDOUBLE[:, :] ABD
    cdef public cDOUBLE[:, :] Bm
    cdef public cDOUBLE[:, :] Bb
    cdef public cDOUBLE[:] Nu
    cdef public cDOUBLE[:] Nu_x
    cdef public cDOUBLE[:] Nu_y
    cdef public cDOUBLE[:] Nv
    cdef public cDOUBLE[:] Nv_x
    cdef public cDOUBLE[:] Nv_y
    cdef public cDOUBLE[:] Nw
    cdef public cDOUBLE[:] Nw_x
    cdef public cDOUBLE[:] Nw_y
    cdef public cDOUBLE[:] u
    def __init__(BFSPlate2D self):
        self.n1 = -1
        self.n2 = -1
        self.n3 = -1
        self.n4 = -1
        self.c1 = -1
        self.c2 = -1
        self.c3 = -1
        self.c4 = -1
        self.init_k_KC0 = 0
        self.init_k_KG = 0
        self.init_k_M = 0
        self.ABD = np.zeros((6, 6), dtype=DOUBLE)
        self.rho = 0
        self.lex = 0
        self.ley = 0
        self.h = 0
        self.Bm = np.zeros((3, num_nodes*DOF), dtype=DOUBLE)
        self.Bb = np.zeros((3, num_nodes*DOF), dtype=DOUBLE)
        self.Nu = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nu_x = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nu_y = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nv = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nv_x = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nv_y = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nw = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nw_x = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.Nw_y = np.zeros(num_nodes*DOF, dtype=DOUBLE)
        self.u = np.zeros(num_nodes*DOF, dtype=DOUBLE)

    cpdef void update_Bm(BFSPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Bm[0, 0] = 0.5*(eta - 1)/lex
            self.Bm[0, 6] = 0.5*(1 - eta)/lex
            self.Bm[0, 12] = 0.5*(eta + 1)/lex
            self.Bm[0, 18] = -(0.5*eta + 0.5)/lex
            self.Bm[1, 1] = 0.5*(xi - 1)/ley
            self.Bm[1, 7] = -(0.5*xi + 0.5)/ley
            self.Bm[1, 13] = 0.5*(xi + 1)/ley
            self.Bm[1, 19] = 0.5*(1 - xi)/ley
            self.Bm[2, 0] = 0.5*(xi - 1)/ley
            self.Bm[2, 1] = 0.5*(eta - 1)/lex
            self.Bm[2, 6] = -(0.5*xi + 0.5)/ley
            self.Bm[2, 7] = 0.5*(1 - eta)/lex
            self.Bm[2, 12] = 0.5*(xi + 1)/ley
            self.Bm[2, 13] = 0.5*(eta + 1)/lex
            self.Bm[2, 18] = 0.5*(1 - xi)/ley
            self.Bm[2, 19] = -(0.5*eta + 0.5)/lex

    cpdef void update_Bb(BFSPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Bb[0, 2] = -1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
            self.Bb[0, 3] = (0.25 - 0.75*xi)*(eta - 1)**2*(eta + 2)/lex
            self.Bb[0, 4] = -0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
            self.Bb[0, 5] = ley*(0.125 - 0.375*xi)*(eta - 1)**2*(eta + 1)/lex
            self.Bb[0, 8] = 1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
            self.Bb[0, 9] = -(eta - 1)**2*(eta + 2)*(0.75*xi + 0.25)/lex
            self.Bb[0, 10] = 0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
            self.Bb[0, 11] = -ley*(eta - 1)**2*(eta + 1)*(0.375*xi + 0.125)/lex
            self.Bb[0, 14] = -1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
            self.Bb[0, 15] = (eta - 2)*(eta + 1)**2*(0.75*xi + 0.25)/lex
            self.Bb[0, 16] = 0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
            self.Bb[0, 17] = -ley*(eta - 1)*(eta + 1)**2*(0.375*xi + 0.125)/lex
            self.Bb[0, 20] = 1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
            self.Bb[0, 21] = (eta - 2)*(eta + 1)**2*(0.75*xi - 0.25)/lex
            self.Bb[0, 22] = -0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
            self.Bb[0, 23] = ley*(0.125 - 0.375*xi)*(eta - 1)*(eta + 1)**2/lex
            self.Bb[1, 2] = -1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
            self.Bb[1, 3] = -0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
            self.Bb[1, 4] = (0.25 - 0.75*eta)*(xi - 1)**2*(xi + 2)/ley
            self.Bb[1, 5] = lex*(0.125 - 0.375*eta)*(xi - 1)**2*(xi + 1)/ley
            self.Bb[1, 8] = 1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
            self.Bb[1, 9] = -0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
            self.Bb[1, 10] = (0.75*eta - 0.25)*(xi - 2)*(xi + 1)**2/ley
            self.Bb[1, 11] = lex*(0.125 - 0.375*eta)*(xi - 1)*(xi + 1)**2/ley
            self.Bb[1, 14] = -1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
            self.Bb[1, 15] = 0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
            self.Bb[1, 16] = (0.75*eta + 0.25)*(xi - 2)*(xi + 1)**2/ley
            self.Bb[1, 17] = -lex*(0.375*eta + 0.125)*(xi - 1)*(xi + 1)**2/ley
            self.Bb[1, 20] = 1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
            self.Bb[1, 21] = 0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
            self.Bb[1, 22] = -(0.75*eta + 0.25)*(xi - 1)**2*(xi + 2)/ley
            self.Bb[1, 23] = -lex*(0.375*eta + 0.125)*(xi - 1)**2*(xi + 1)/ley
            self.Bb[2, 2] = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
            self.Bb[2, 3] = (-2.25*eta**2*xi**2 + 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 - 1.5*xi - 0.75)/ley
            self.Bb[2, 4] = (-2.25*eta**2*xi**2 + 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta + 0.75*xi**2 - 0.75)/lex
            self.Bb[2, 5] = -(eta - 1)*(xi - 1)*(0.125*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.5*(eta + 1)*(xi + 1))
            self.Bb[2, 8] = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
            self.Bb[2, 9] = (-2.25*eta**2*xi**2 - 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 + 1.5*xi - 0.75)/ley
            self.Bb[2, 10] = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta - 0.75*xi**2 + 0.75)/lex
            self.Bb[2, 11] = -(eta - 1)*(xi + 1)*(0.25*(eta - 1)*(xi - 1) + 0.125*(eta - 1)*(xi + 1) + 0.5*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))
            self.Bb[2, 14] = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
            self.Bb[2, 15] = 1.0*(2.25*eta**2*xi**2 + 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 - 1.5*xi + 0.75)/ley
            self.Bb[2, 16] = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta - 0.75*xi**2 + 0.75)/lex
            self.Bb[2, 17] = -(eta + 1)*(xi + 1)*(0.5*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.125*(eta + 1)*(xi + 1))
            self.Bb[2, 20] = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
            self.Bb[2, 21] = 1.0*(2.25*eta**2*xi**2 - 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 + 1.5*xi + 0.75)/ley
            self.Bb[2, 22] = (-2.25*eta**2*xi**2 + 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta + 0.75*xi**2 - 0.75)/lex
            self.Bb[2, 23] = -(eta + 1)*(xi - 1)*(0.25*(eta - 1)*(xi - 1) + 0.5*(eta - 1)*(xi + 1) + 0.125*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))

    cpdef void update_Nu(BFSPlate2D self, double xi, double eta):
        with nogil:
            self.Nu[0] = (0.25 - 0.25*xi)*(1 - eta)
            self.Nu[6] = (1 - eta)*(0.25*xi + 0.25)
            self.Nu[12] = (eta + 1)*(0.25*xi + 0.25)
            self.Nu[18] = (0.25 - 0.25*xi)*(eta + 1)

    cpdef void update_Nu_x(BFSPlate2D self, double xi, double eta):
        with nogil:
            self.Nu_x[0] = 2*(0.25*eta - 0.25)/self.lex
            self.Nu_x[6] = 2*(0.25 - 0.25*eta)/self.lex
            self.Nu_x[12] = 2*(0.25*eta + 0.25)/self.lex
            self.Nu_x[18] = 2*(-0.25*eta - 0.25)/self.lex

    cpdef void update_Nu_y(BFSPlate2D self, double xi, double eta):
        with nogil:
            self.Nu_y[0] = 2*(0.25*xi - 0.25)/self.ley
            self.Nu_y[6] = 2*(-0.25*xi - 0.25)/self.ley
            self.Nu_y[12] = 2*(0.25*xi + 0.25)/self.ley
            self.Nu_y[18] = 2*(0.25 - 0.25*xi)/self.ley

    cpdef void update_Nv(BFSPlate2D self, double xi, double eta):
        with nogil:
            self.Nv[1] = (0.25 - 0.25*xi)*(1 - eta)
            self.Nv[7] = (1 - eta)*(0.25*xi + 0.25)
            self.Nv[13] = (eta + 1)*(0.25*xi + 0.25)
            self.Nv[19] = (0.25 - 0.25*xi)*(eta + 1)

    cpdef void update_Nv_x(BFSPlate2D self, double xi, double eta):
        with nogil:
            self.Nv_x[1] = 2*(0.25*eta - 0.25)/self.lex
            self.Nv_x[7] = 2*(0.25 - 0.25*eta)/self.lex
            self.Nv_x[13] = 2*(0.25*eta + 0.25)/self.lex
            self.Nv_x[19] = 2*(-0.25*eta - 0.25)/self.lex

    cpdef void update_Nv_y(BFSPlate2D self, double xi, double eta):
        with nogil:
            self.Nv_y[1] = 2*(0.25*xi - 0.25)/self.ley
            self.Nv_y[7] = 2*(-0.25*xi - 0.25)/self.ley
            self.Nv_y[13] = 2*(0.25*xi + 0.25)/self.ley
            self.Nv_y[19] = 2*(0.25 - 0.25*xi)/self.ley

    cpdef void update_Nw(BFSPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nw[2] = 0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nw[3] = 0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(xi - 1)**2
            self.Nw[4] = 0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nw[5] = 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(-xi - 1)*(xi - 1)**2
            self.Nw[8] = 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 2)*(xi + 1)**2
            self.Nw[9] = -0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(xi + 1)**2
            self.Nw[10] = 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(xi + 1)**2
            self.Nw[11] = -0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)*(xi + 1)**2
            self.Nw[14] = 0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(xi + 1)**2
            self.Nw[15] = -0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(xi + 1)**2
            self.Nw[16] = -0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(xi + 1)**2
            self.Nw[17] = 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(xi + 1)**2
            self.Nw[20] = 0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nw[21] = 0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(xi - 1)**2
            self.Nw[22] = -0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(xi - 1)**2
            self.Nw[23] = -0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(-xi - 1)*(xi - 1)**2

    cpdef void update_Nw_x(BFSPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nw_x[2] = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nw_x[3] = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nw_x[4] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nw_x[5] = 2*(0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
            self.Nw_x[8] = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nw_x[9] = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nw_x[10] = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nw_x[11] = 2*(-0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
            self.Nw_x[14] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nw_x[15] = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nw_x[16] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nw_x[17] = 2*(0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(2*xi + 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
            self.Nw_x[20] = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Nw_x[21] = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Nw_x[22] = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
            self.Nw_x[23] = 2*(-0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex

    cpdef void update_Nw_y(BFSPlate2D self, double xi, double eta):
        cdef double lex, ley
        with nogil:
            lex = self.lex
            ley = self.ley
            self.Nw_y[2] = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nw_y[3] = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Nw_y[4] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nw_y[5] = 2*(0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Nw_y[8] = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nw_y[9] = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nw_y[10] = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nw_y[11] = 2*(-0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nw_y[14] = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nw_y[15] = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nw_y[16] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
            self.Nw_y[17] = 2*(0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
            self.Nw_y[20] = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nw_y[21] = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
            self.Nw_y[22] = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
            self.Nw_y[23] = 2*(-0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley


cpdef void update_KC0(BFSPlate2D plate,
        np.ndarray[cDOUBLE, ndim=1] points,
        np.ndarray[cDOUBLE, ndim=1] weights,
        np.ndarray[cINT, ndim=1] KC0r,
        np.ndarray[cINT, ndim=1] KC0c,
        np.ndarray[cDOUBLE, ndim=1] KC0v,
        ):
    """Update sparse vectors for linear constitutive stiffness matrix KC0

    Properties
    ----------
    plate : `.BFSPlate2D` object
        The plate element being added to KC0
    points : np.array
        Integration poins
    weights : np.array
        Integration weights
    KC0r : np.array
        Array to store row positions of sparse values
    KC0c : np.array
        Array to store column positions of sparse values
    KC0v : np.array
        Array to store sparse values

    """
    cdef cINT c1, c2, c3, c4, nint, i, j, k
    cdef double Bm1_01, Bm1_07, Bm1_13, Bm1_19
    cdef double Bm2_02, Bm2_08, Bm2_14, Bm2_20
    cdef double Bm3_01, Bm3_02, Bm3_07, Bm3_08, Bm3_13, Bm3_14, Bm3_19, Bm3_20
    cdef double Bb1_03, Bb1_04, Bb1_05, Bb1_06, Bb1_09, Bb1_10, Bb1_11, Bb1_12, Bb1_15, Bb1_16, Bb1_17, Bb1_18, Bb1_21, Bb1_22, Bb1_23, Bb1_24
    cdef double Bb2_03, Bb2_04, Bb2_05, Bb2_06, Bb2_09, Bb2_10, Bb2_11, Bb2_12, Bb2_15, Bb2_16, Bb2_17, Bb2_18, Bb2_21, Bb2_22, Bb2_23, Bb2_24
    cdef double Bb3_03, Bb3_04, Bb3_05, Bb3_06, Bb3_09, Bb3_10, Bb3_11, Bb3_12, Bb3_15, Bb3_16, Bb3_17, Bb3_18, Bb3_21, Bb3_22, Bb3_23, Bb3_24
    cdef double lex, ley
    cdef double xi, eta, weight_xi, weight_eta, weight
    cdef double A11, A12, A16, A22, A26, A66
    cdef double B11, B12, B16, B22, B26, B66
    cdef double D11, D12, D16, D22, D26, D66

    with nogil:
        lex = plate.lex
        ley = plate.ley

        A11 = plate.ABD[0, 0]
        A12 = plate.ABD[0, 1]
        A16 = plate.ABD[0, 2]
        A22 = plate.ABD[1, 1]
        A26 = plate.ABD[1, 2]
        A66 = plate.ABD[2, 2]
        B11 = plate.ABD[0, 0+3]
        B12 = plate.ABD[0, 1+3]
        B16 = plate.ABD[0, 2+3]
        B22 = plate.ABD[1, 1+3]
        B26 = plate.ABD[1, 2+3]
        B66 = plate.ABD[2, 2+3]
        D11 = plate.ABD[0+3, 0+3]
        D12 = plate.ABD[0+3, 1+3]
        D16 = plate.ABD[0+3, 2+3]
        D22 = plate.ABD[1+3, 1+3]
        D26 = plate.ABD[1+3, 2+3]
        D66 = plate.ABD[2+3, 2+3]

        # positions the global matrices
        c1 = plate.c1
        c2 = plate.c2
        c3 = plate.c3
        c4 = plate.c4

        nint = points.shape[0]

        k = plate.init_k_KC0
        KC0r[k] = 0+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 0+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 1+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 2+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 3+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 4+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 5+c1
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 0+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 1+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 2+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 3+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 4+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 5+c2
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 0+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 1+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 2+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 3+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 4+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 5+c3
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 0+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 1+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 2+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 3+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 4+c4
        KC0c[k] = 5+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 0+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 1+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 2+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 3+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 4+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 5+c1
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 0+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 1+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 2+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 3+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 4+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 5+c2
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 0+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 1+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 2+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 3+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 4+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 5+c3
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 0+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 1+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 2+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 3+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 4+c4
        k += 1
        KC0r[k] = 5+c4
        KC0c[k] = 5+c4

        for i in range(nint):
            xi = points[i]
            weight_xi = weights[i]
            for j in range(nint):
                eta = points[j]
                weight_eta = weights[j]
                weight = weight_xi*weight_eta

                Bm1_01 = 0.5*(eta - 1)/lex
                Bm1_07 = 0.5*(1 - eta)/lex
                Bm1_13 = 0.5*(eta + 1)/lex
                Bm1_19 = -(0.5*eta + 0.5)/lex
                Bm2_02 = 0.5*(xi - 1)/ley
                Bm2_08 = -(0.5*xi + 0.5)/ley
                Bm2_14 = 0.5*(xi + 1)/ley
                Bm2_20 = 0.5*(1 - xi)/ley
                Bm3_01 = 0.5*(xi - 1)/ley
                Bm3_02 = 0.5*(eta - 1)/lex
                Bm3_07 = -(0.5*xi + 0.5)/ley
                Bm3_08 = 0.5*(1 - eta)/lex
                Bm3_13 = 0.5*(xi + 1)/ley
                Bm3_14 = 0.5*(eta + 1)/lex
                Bm3_19 = 0.5*(1 - xi)/ley
                Bm3_20 = -(0.5*eta + 0.5)/lex
                Bb1_03 = -1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_04 = (0.25 - 0.75*xi)*(eta - 1)**2*(eta + 2)/lex
                Bb1_05 = -0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_06 = ley*(0.125 - 0.375*xi)*(eta - 1)**2*(eta + 1)/lex
                Bb1_09 = 1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_10 = -(eta - 1)**2*(eta + 2)*(0.75*xi + 0.25)/lex
                Bb1_11 = 0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_12 = -ley*(eta - 1)**2*(eta + 1)*(0.375*xi + 0.125)/lex
                Bb1_15 = -1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_16 = (eta - 2)*(eta + 1)**2*(0.75*xi + 0.25)/lex
                Bb1_17 = 0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_18 = -ley*(eta - 1)*(eta + 1)**2*(0.375*xi + 0.125)/lex
                Bb1_21 = 1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_22 = (eta - 2)*(eta + 1)**2*(0.75*xi - 0.25)/lex
                Bb1_23 = -0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_24 = ley*(0.125 - 0.375*xi)*(eta - 1)*(eta + 1)**2/lex
                Bb2_03 = -1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_04 = -0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_05 = (0.25 - 0.75*eta)*(xi - 1)**2*(xi + 2)/ley
                Bb2_06 = lex*(0.125 - 0.375*eta)*(xi - 1)**2*(xi + 1)/ley
                Bb2_09 = 1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_10 = -0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_11 = (0.75*eta - 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_12 = lex*(0.125 - 0.375*eta)*(xi - 1)*(xi + 1)**2/ley
                Bb2_15 = -1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_16 = 0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_17 = (0.75*eta + 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_18 = -lex*(0.375*eta + 0.125)*(xi - 1)*(xi + 1)**2/ley
                Bb2_21 = 1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_22 = 0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_23 = -(0.75*eta + 0.25)*(xi - 1)**2*(xi + 2)/ley
                Bb2_24 = -lex*(0.375*eta + 0.125)*(xi - 1)**2*(xi + 1)/ley
                Bb3_03 = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
                Bb3_04 = (-2.25*eta**2*xi**2 + 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 - 1.5*xi - 0.75)/ley
                Bb3_05 = (-2.25*eta**2*xi**2 + 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_06 = -(eta - 1)*(xi - 1)*(0.125*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.5*(eta + 1)*(xi + 1))
                Bb3_09 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_10 = (-2.25*eta**2*xi**2 - 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 + 1.5*xi - 0.75)/ley
                Bb3_11 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_12 = -(eta - 1)*(xi + 1)*(0.25*(eta - 1)*(xi - 1) + 0.125*(eta - 1)*(xi + 1) + 0.5*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))
                Bb3_15 = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
                Bb3_16 = 1.0*(2.25*eta**2*xi**2 + 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 - 1.5*xi + 0.75)/ley
                Bb3_17 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_18 = -(eta + 1)*(xi + 1)*(0.5*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.125*(eta + 1)*(xi + 1))
                Bb3_21 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_22 = 1.0*(2.25*eta**2*xi**2 - 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 + 1.5*xi + 0.75)/ley
                Bb3_23 = (-2.25*eta**2*xi**2 + 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_24 = -(eta + 1)*(xi - 1)*(0.25*(eta - 1)*(xi - 1) + 0.5*(eta - 1)*(xi + 1) + 0.125*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))

                k = plate.init_k_KC0
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_01 + A16*Bm3_01) + Bm3_01*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(A12*Bm1_01 + A26*Bm3_01) + Bm3_02*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(B11*Bm1_01 + B16*Bm3_01) + Bb2_03*(B12*Bm1_01 + B26*Bm3_01) + Bb3_03*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(B11*Bm1_01 + B16*Bm3_01) + Bb2_04*(B12*Bm1_01 + B26*Bm3_01) + Bb3_04*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(B11*Bm1_01 + B16*Bm3_01) + Bb2_05*(B12*Bm1_01 + B26*Bm3_01) + Bb3_05*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(B11*Bm1_01 + B16*Bm3_01) + Bb2_06*(B12*Bm1_01 + B26*Bm3_01) + Bb3_06*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(A11*Bm1_01 + A16*Bm3_01) + Bm3_07*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(A12*Bm1_01 + A26*Bm3_01) + Bm3_08*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_01 + B16*Bm3_01) + Bb2_09*(B12*Bm1_01 + B26*Bm3_01) + Bb3_09*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_01 + B16*Bm3_01) + Bb2_10*(B12*Bm1_01 + B26*Bm3_01) + Bb3_10*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(B11*Bm1_01 + B16*Bm3_01) + Bb2_11*(B12*Bm1_01 + B26*Bm3_01) + Bb3_11*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(B11*Bm1_01 + B16*Bm3_01) + Bb2_12*(B12*Bm1_01 + B26*Bm3_01) + Bb3_12*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_01 + A16*Bm3_01) + Bm3_13*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_01 + A26*Bm3_01) + Bm3_14*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(B11*Bm1_01 + B16*Bm3_01) + Bb2_15*(B12*Bm1_01 + B26*Bm3_01) + Bb3_15*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(B11*Bm1_01 + B16*Bm3_01) + Bb2_16*(B12*Bm1_01 + B26*Bm3_01) + Bb3_16*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_01 + B16*Bm3_01) + Bb2_17*(B12*Bm1_01 + B26*Bm3_01) + Bb3_17*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_01 + B16*Bm3_01) + Bb2_18*(B12*Bm1_01 + B26*Bm3_01) + Bb3_18*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(A11*Bm1_01 + A16*Bm3_01) + Bm3_19*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(A12*Bm1_01 + A26*Bm3_01) + Bm3_20*(A16*Bm1_01 + A66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(B11*Bm1_01 + B16*Bm3_01) + Bb2_21*(B12*Bm1_01 + B26*Bm3_01) + Bb3_21*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(B11*Bm1_01 + B16*Bm3_01) + Bb2_22*(B12*Bm1_01 + B26*Bm3_01) + Bb3_22*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(B11*Bm1_01 + B16*Bm3_01) + Bb2_23*(B12*Bm1_01 + B26*Bm3_01) + Bb3_23*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(B11*Bm1_01 + B16*Bm3_01) + Bb2_24*(B12*Bm1_01 + B26*Bm3_01) + Bb3_24*(B16*Bm1_01 + B66*Bm3_01))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_02 + A16*Bm3_02) + Bm3_01*(A26*Bm2_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(A22*Bm2_02 + A26*Bm3_02) + Bm3_02*(A26*Bm2_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(B12*Bm2_02 + B16*Bm3_02) + Bb2_03*(B22*Bm2_02 + B26*Bm3_02) + Bb3_03*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(B12*Bm2_02 + B16*Bm3_02) + Bb2_04*(B22*Bm2_02 + B26*Bm3_02) + Bb3_04*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(B12*Bm2_02 + B16*Bm3_02) + Bb2_05*(B22*Bm2_02 + B26*Bm3_02) + Bb3_05*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(B12*Bm2_02 + B16*Bm3_02) + Bb2_06*(B22*Bm2_02 + B26*Bm3_02) + Bb3_06*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(A12*Bm2_02 + A16*Bm3_02) + Bm3_07*(A26*Bm2_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(A22*Bm2_02 + A26*Bm3_02) + Bm3_08*(A26*Bm2_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_02 + B16*Bm3_02) + Bb2_09*(B22*Bm2_02 + B26*Bm3_02) + Bb3_09*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_02 + B16*Bm3_02) + Bb2_10*(B22*Bm2_02 + B26*Bm3_02) + Bb3_10*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(B12*Bm2_02 + B16*Bm3_02) + Bb2_11*(B22*Bm2_02 + B26*Bm3_02) + Bb3_11*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(B12*Bm2_02 + B16*Bm3_02) + Bb2_12*(B22*Bm2_02 + B26*Bm3_02) + Bb3_12*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_02 + A16*Bm3_02) + Bm3_13*(A26*Bm2_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_02 + A26*Bm3_02) + Bm3_14*(A26*Bm2_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(B12*Bm2_02 + B16*Bm3_02) + Bb2_15*(B22*Bm2_02 + B26*Bm3_02) + Bb3_15*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(B12*Bm2_02 + B16*Bm3_02) + Bb2_16*(B22*Bm2_02 + B26*Bm3_02) + Bb3_16*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_02 + B16*Bm3_02) + Bb2_17*(B22*Bm2_02 + B26*Bm3_02) + Bb3_17*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_02 + B16*Bm3_02) + Bb2_18*(B22*Bm2_02 + B26*Bm3_02) + Bb3_18*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(A12*Bm2_02 + A16*Bm3_02) + Bm3_19*(A26*Bm2_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(A22*Bm2_02 + A26*Bm3_02) + Bm3_20*(A26*Bm2_02 + A66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(B12*Bm2_02 + B16*Bm3_02) + Bb2_21*(B22*Bm2_02 + B26*Bm3_02) + Bb3_21*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(B12*Bm2_02 + B16*Bm3_02) + Bb2_22*(B22*Bm2_02 + B26*Bm3_02) + Bb3_22*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(B12*Bm2_02 + B16*Bm3_02) + Bb2_23*(B22*Bm2_02 + B26*Bm3_02) + Bb3_23*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(B12*Bm2_02 + B16*Bm3_02) + Bb2_24*(B22*Bm2_02 + B26*Bm3_02) + Bb3_24*(B26*Bm2_02 + B66*Bm3_02))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_03 + B12*Bb2_03 + B16*Bb3_03) + Bm3_01*(B16*Bb1_03 + B26*Bb2_03 + B66*Bb3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_03 + B22*Bb2_03 + B26*Bb3_03) + Bm3_02*(B16*Bb1_03 + B26*Bb2_03 + B66*Bb3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_03*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_03*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_04*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_04*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_05*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_05*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_06*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_06*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_03 + B12*Bb2_03 + B16*Bb3_03) + Bm3_07*(B16*Bb1_03 + B26*Bb2_03 + B66*Bb3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_03 + B22*Bb2_03 + B26*Bb3_03) + Bm3_08*(B16*Bb1_03 + B26*Bb2_03 + B66*Bb3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_09*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_09*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_10*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_10*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_11*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_11*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_12*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_12*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_03 + B12*Bb2_03 + B16*Bb3_03) + Bm3_13*(B16*Bb1_03 + B26*Bb2_03 + B66*Bb3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_03 + B22*Bb2_03 + B26*Bb3_03) + Bm3_14*(B16*Bb1_03 + B26*Bb2_03 + B66*Bb3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_15*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_15*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_16*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_16*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_17*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_17*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_18*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_18*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_03 + B12*Bb2_03 + B16*Bb3_03) + Bm3_19*(B16*Bb1_03 + B26*Bb2_03 + B66*Bb3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_03 + B22*Bb2_03 + B26*Bb3_03) + Bm3_20*(B16*Bb1_03 + B26*Bb2_03 + B66*Bb3_03))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_21*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_21*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_22*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_22*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_23*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_23*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_03*D11 + Bb2_03*D12 + Bb3_03*D16) + Bb2_24*(Bb1_03*D12 + Bb2_03*D22 + Bb3_03*D26) + Bb3_24*(Bb1_03*D16 + Bb2_03*D26 + Bb3_03*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_04 + B12*Bb2_04 + B16*Bb3_04) + Bm3_01*(B16*Bb1_04 + B26*Bb2_04 + B66*Bb3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_04 + B22*Bb2_04 + B26*Bb3_04) + Bm3_02*(B16*Bb1_04 + B26*Bb2_04 + B66*Bb3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_03*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_03*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_04*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_04*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_05*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_05*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_06*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_06*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_04 + B12*Bb2_04 + B16*Bb3_04) + Bm3_07*(B16*Bb1_04 + B26*Bb2_04 + B66*Bb3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_04 + B22*Bb2_04 + B26*Bb3_04) + Bm3_08*(B16*Bb1_04 + B26*Bb2_04 + B66*Bb3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_09*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_09*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_10*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_10*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_11*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_11*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_12*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_12*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_04 + B12*Bb2_04 + B16*Bb3_04) + Bm3_13*(B16*Bb1_04 + B26*Bb2_04 + B66*Bb3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_04 + B22*Bb2_04 + B26*Bb3_04) + Bm3_14*(B16*Bb1_04 + B26*Bb2_04 + B66*Bb3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_15*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_15*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_16*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_16*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_17*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_17*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_18*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_18*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_04 + B12*Bb2_04 + B16*Bb3_04) + Bm3_19*(B16*Bb1_04 + B26*Bb2_04 + B66*Bb3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_04 + B22*Bb2_04 + B26*Bb3_04) + Bm3_20*(B16*Bb1_04 + B26*Bb2_04 + B66*Bb3_04))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_21*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_21*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_22*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_22*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_23*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_23*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_04*D11 + Bb2_04*D12 + Bb3_04*D16) + Bb2_24*(Bb1_04*D12 + Bb2_04*D22 + Bb3_04*D26) + Bb3_24*(Bb1_04*D16 + Bb2_04*D26 + Bb3_04*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_05 + B12*Bb2_05 + B16*Bb3_05) + Bm3_01*(B16*Bb1_05 + B26*Bb2_05 + B66*Bb3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_05 + B22*Bb2_05 + B26*Bb3_05) + Bm3_02*(B16*Bb1_05 + B26*Bb2_05 + B66*Bb3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_03*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_03*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_04*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_04*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_05*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_05*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_06*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_06*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_05 + B12*Bb2_05 + B16*Bb3_05) + Bm3_07*(B16*Bb1_05 + B26*Bb2_05 + B66*Bb3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_05 + B22*Bb2_05 + B26*Bb3_05) + Bm3_08*(B16*Bb1_05 + B26*Bb2_05 + B66*Bb3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_09*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_09*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_10*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_10*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_11*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_11*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_12*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_12*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_05 + B12*Bb2_05 + B16*Bb3_05) + Bm3_13*(B16*Bb1_05 + B26*Bb2_05 + B66*Bb3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_05 + B22*Bb2_05 + B26*Bb3_05) + Bm3_14*(B16*Bb1_05 + B26*Bb2_05 + B66*Bb3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_15*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_15*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_16*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_16*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_17*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_17*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_18*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_18*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_05 + B12*Bb2_05 + B16*Bb3_05) + Bm3_19*(B16*Bb1_05 + B26*Bb2_05 + B66*Bb3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_05 + B22*Bb2_05 + B26*Bb3_05) + Bm3_20*(B16*Bb1_05 + B26*Bb2_05 + B66*Bb3_05))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_21*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_21*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_22*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_22*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_23*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_23*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_05*D11 + Bb2_05*D12 + Bb3_05*D16) + Bb2_24*(Bb1_05*D12 + Bb2_05*D22 + Bb3_05*D26) + Bb3_24*(Bb1_05*D16 + Bb2_05*D26 + Bb3_05*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_06 + B12*Bb2_06 + B16*Bb3_06) + Bm3_01*(B16*Bb1_06 + B26*Bb2_06 + B66*Bb3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_06 + B22*Bb2_06 + B26*Bb3_06) + Bm3_02*(B16*Bb1_06 + B26*Bb2_06 + B66*Bb3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_03*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_03*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_04*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_04*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_05*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_05*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_06*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_06*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_06 + B12*Bb2_06 + B16*Bb3_06) + Bm3_07*(B16*Bb1_06 + B26*Bb2_06 + B66*Bb3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_06 + B22*Bb2_06 + B26*Bb3_06) + Bm3_08*(B16*Bb1_06 + B26*Bb2_06 + B66*Bb3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_09*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_09*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_10*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_10*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_11*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_11*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_12*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_12*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_06 + B12*Bb2_06 + B16*Bb3_06) + Bm3_13*(B16*Bb1_06 + B26*Bb2_06 + B66*Bb3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_06 + B22*Bb2_06 + B26*Bb3_06) + Bm3_14*(B16*Bb1_06 + B26*Bb2_06 + B66*Bb3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_15*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_15*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_16*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_16*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_17*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_17*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_18*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_18*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_06 + B12*Bb2_06 + B16*Bb3_06) + Bm3_19*(B16*Bb1_06 + B26*Bb2_06 + B66*Bb3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_06 + B22*Bb2_06 + B26*Bb3_06) + Bm3_20*(B16*Bb1_06 + B26*Bb2_06 + B66*Bb3_06))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_21*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_21*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_22*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_22*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_23*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_23*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_06*D11 + Bb2_06*D12 + Bb3_06*D16) + Bb2_24*(Bb1_06*D12 + Bb2_06*D22 + Bb3_06*D26) + Bb3_24*(Bb1_06*D16 + Bb2_06*D26 + Bb3_06*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_07 + A16*Bm3_07) + Bm3_01*(A16*Bm1_07 + A66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(A12*Bm1_07 + A26*Bm3_07) + Bm3_02*(A16*Bm1_07 + A66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(B11*Bm1_07 + B16*Bm3_07) + Bb2_03*(B12*Bm1_07 + B26*Bm3_07) + Bb3_03*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(B11*Bm1_07 + B16*Bm3_07) + Bb2_04*(B12*Bm1_07 + B26*Bm3_07) + Bb3_04*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(B11*Bm1_07 + B16*Bm3_07) + Bb2_05*(B12*Bm1_07 + B26*Bm3_07) + Bb3_05*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(B11*Bm1_07 + B16*Bm3_07) + Bb2_06*(B12*Bm1_07 + B26*Bm3_07) + Bb3_06*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(A11*Bm1_07 + A16*Bm3_07) + Bm3_07*(A16*Bm1_07 + A66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(A12*Bm1_07 + A26*Bm3_07) + Bm3_08*(A16*Bm1_07 + A66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_07 + B16*Bm3_07) + Bb2_09*(B12*Bm1_07 + B26*Bm3_07) + Bb3_09*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_07 + B16*Bm3_07) + Bb2_10*(B12*Bm1_07 + B26*Bm3_07) + Bb3_10*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(B11*Bm1_07 + B16*Bm3_07) + Bb2_11*(B12*Bm1_07 + B26*Bm3_07) + Bb3_11*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(B11*Bm1_07 + B16*Bm3_07) + Bb2_12*(B12*Bm1_07 + B26*Bm3_07) + Bb3_12*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_07 + A16*Bm3_07) + Bm3_13*(A16*Bm1_07 + A66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_07 + A26*Bm3_07) + Bm3_14*(A16*Bm1_07 + A66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(B11*Bm1_07 + B16*Bm3_07) + Bb2_15*(B12*Bm1_07 + B26*Bm3_07) + Bb3_15*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(B11*Bm1_07 + B16*Bm3_07) + Bb2_16*(B12*Bm1_07 + B26*Bm3_07) + Bb3_16*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_07 + B16*Bm3_07) + Bb2_17*(B12*Bm1_07 + B26*Bm3_07) + Bb3_17*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_07 + B16*Bm3_07) + Bb2_18*(B12*Bm1_07 + B26*Bm3_07) + Bb3_18*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(A11*Bm1_07 + A16*Bm3_07) + Bm3_19*(A16*Bm1_07 + A66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(A12*Bm1_07 + A26*Bm3_07) + Bm3_20*(A16*Bm1_07 + A66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(B11*Bm1_07 + B16*Bm3_07) + Bb2_21*(B12*Bm1_07 + B26*Bm3_07) + Bb3_21*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(B11*Bm1_07 + B16*Bm3_07) + Bb2_22*(B12*Bm1_07 + B26*Bm3_07) + Bb3_22*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(B11*Bm1_07 + B16*Bm3_07) + Bb2_23*(B12*Bm1_07 + B26*Bm3_07) + Bb3_23*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(B11*Bm1_07 + B16*Bm3_07) + Bb2_24*(B12*Bm1_07 + B26*Bm3_07) + Bb3_24*(B16*Bm1_07 + B66*Bm3_07))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_08 + A16*Bm3_08) + Bm3_01*(A26*Bm2_08 + A66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(A22*Bm2_08 + A26*Bm3_08) + Bm3_02*(A26*Bm2_08 + A66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(B12*Bm2_08 + B16*Bm3_08) + Bb2_03*(B22*Bm2_08 + B26*Bm3_08) + Bb3_03*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(B12*Bm2_08 + B16*Bm3_08) + Bb2_04*(B22*Bm2_08 + B26*Bm3_08) + Bb3_04*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(B12*Bm2_08 + B16*Bm3_08) + Bb2_05*(B22*Bm2_08 + B26*Bm3_08) + Bb3_05*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(B12*Bm2_08 + B16*Bm3_08) + Bb2_06*(B22*Bm2_08 + B26*Bm3_08) + Bb3_06*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(A12*Bm2_08 + A16*Bm3_08) + Bm3_07*(A26*Bm2_08 + A66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(A22*Bm2_08 + A26*Bm3_08) + Bm3_08*(A26*Bm2_08 + A66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_08 + B16*Bm3_08) + Bb2_09*(B22*Bm2_08 + B26*Bm3_08) + Bb3_09*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_08 + B16*Bm3_08) + Bb2_10*(B22*Bm2_08 + B26*Bm3_08) + Bb3_10*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(B12*Bm2_08 + B16*Bm3_08) + Bb2_11*(B22*Bm2_08 + B26*Bm3_08) + Bb3_11*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(B12*Bm2_08 + B16*Bm3_08) + Bb2_12*(B22*Bm2_08 + B26*Bm3_08) + Bb3_12*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_08 + A16*Bm3_08) + Bm3_13*(A26*Bm2_08 + A66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_08 + A26*Bm3_08) + Bm3_14*(A26*Bm2_08 + A66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(B12*Bm2_08 + B16*Bm3_08) + Bb2_15*(B22*Bm2_08 + B26*Bm3_08) + Bb3_15*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(B12*Bm2_08 + B16*Bm3_08) + Bb2_16*(B22*Bm2_08 + B26*Bm3_08) + Bb3_16*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_08 + B16*Bm3_08) + Bb2_17*(B22*Bm2_08 + B26*Bm3_08) + Bb3_17*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_08 + B16*Bm3_08) + Bb2_18*(B22*Bm2_08 + B26*Bm3_08) + Bb3_18*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(A12*Bm2_08 + A16*Bm3_08) + Bm3_19*(A26*Bm2_08 + A66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(A22*Bm2_08 + A26*Bm3_08) + Bm3_20*(A26*Bm2_08 + A66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(B12*Bm2_08 + B16*Bm3_08) + Bb2_21*(B22*Bm2_08 + B26*Bm3_08) + Bb3_21*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(B12*Bm2_08 + B16*Bm3_08) + Bb2_22*(B22*Bm2_08 + B26*Bm3_08) + Bb3_22*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(B12*Bm2_08 + B16*Bm3_08) + Bb2_23*(B22*Bm2_08 + B26*Bm3_08) + Bb3_23*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(B12*Bm2_08 + B16*Bm3_08) + Bb2_24*(B22*Bm2_08 + B26*Bm3_08) + Bb3_24*(B26*Bm2_08 + B66*Bm3_08))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_01*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_02*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_03*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_03*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_04*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_04*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_05*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_05*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_06*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_06*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_07*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_08*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_09*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_09*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_10*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_10*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_11*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_11*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_12*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_12*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_13*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_14*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_15*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_15*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_16*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_16*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_17*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_17*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_18*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_18*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + Bm3_19*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + Bm3_20*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_21*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_21*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_22*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_22*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_23*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_23*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_09*D11 + Bb2_09*D12 + Bb3_09*D16) + Bb2_24*(Bb1_09*D12 + Bb2_09*D22 + Bb3_09*D26) + Bb3_24*(Bb1_09*D16 + Bb2_09*D26 + Bb3_09*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_01*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_02*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_03*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_03*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_04*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_04*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_05*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_05*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_06*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_06*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_07*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_08*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_09*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_09*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_10*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_10*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_11*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_11*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_12*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_12*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_13*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_14*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_15*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_15*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_16*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_16*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_17*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_17*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_18*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_18*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10) + Bm3_19*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10) + Bm3_20*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_21*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_21*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_22*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_22*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_23*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_23*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_10*D11 + Bb2_10*D12 + Bb3_10*D16) + Bb2_24*(Bb1_10*D12 + Bb2_10*D22 + Bb3_10*D26) + Bb3_24*(Bb1_10*D16 + Bb2_10*D26 + Bb3_10*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_11 + B12*Bb2_11 + B16*Bb3_11) + Bm3_01*(B16*Bb1_11 + B26*Bb2_11 + B66*Bb3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_11 + B22*Bb2_11 + B26*Bb3_11) + Bm3_02*(B16*Bb1_11 + B26*Bb2_11 + B66*Bb3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_03*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_03*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_04*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_04*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_05*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_05*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_06*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_06*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_11 + B12*Bb2_11 + B16*Bb3_11) + Bm3_07*(B16*Bb1_11 + B26*Bb2_11 + B66*Bb3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_11 + B22*Bb2_11 + B26*Bb3_11) + Bm3_08*(B16*Bb1_11 + B26*Bb2_11 + B66*Bb3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_09*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_09*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_10*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_10*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_11*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_11*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_12*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_12*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_11 + B12*Bb2_11 + B16*Bb3_11) + Bm3_13*(B16*Bb1_11 + B26*Bb2_11 + B66*Bb3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_11 + B22*Bb2_11 + B26*Bb3_11) + Bm3_14*(B16*Bb1_11 + B26*Bb2_11 + B66*Bb3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_15*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_15*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_16*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_16*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_17*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_17*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_18*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_18*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_11 + B12*Bb2_11 + B16*Bb3_11) + Bm3_19*(B16*Bb1_11 + B26*Bb2_11 + B66*Bb3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_11 + B22*Bb2_11 + B26*Bb3_11) + Bm3_20*(B16*Bb1_11 + B26*Bb2_11 + B66*Bb3_11))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_21*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_21*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_22*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_22*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_23*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_23*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_11*D11 + Bb2_11*D12 + Bb3_11*D16) + Bb2_24*(Bb1_11*D12 + Bb2_11*D22 + Bb3_11*D26) + Bb3_24*(Bb1_11*D16 + Bb2_11*D26 + Bb3_11*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_12 + B12*Bb2_12 + B16*Bb3_12) + Bm3_01*(B16*Bb1_12 + B26*Bb2_12 + B66*Bb3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_12 + B22*Bb2_12 + B26*Bb3_12) + Bm3_02*(B16*Bb1_12 + B26*Bb2_12 + B66*Bb3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_03*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_03*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_04*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_04*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_05*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_05*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_06*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_06*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_12 + B12*Bb2_12 + B16*Bb3_12) + Bm3_07*(B16*Bb1_12 + B26*Bb2_12 + B66*Bb3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_12 + B22*Bb2_12 + B26*Bb3_12) + Bm3_08*(B16*Bb1_12 + B26*Bb2_12 + B66*Bb3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_09*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_09*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_10*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_10*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_11*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_11*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_12*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_12*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_12 + B12*Bb2_12 + B16*Bb3_12) + Bm3_13*(B16*Bb1_12 + B26*Bb2_12 + B66*Bb3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_12 + B22*Bb2_12 + B26*Bb3_12) + Bm3_14*(B16*Bb1_12 + B26*Bb2_12 + B66*Bb3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_15*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_15*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_16*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_16*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_17*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_17*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_18*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_18*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_12 + B12*Bb2_12 + B16*Bb3_12) + Bm3_19*(B16*Bb1_12 + B26*Bb2_12 + B66*Bb3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_12 + B22*Bb2_12 + B26*Bb3_12) + Bm3_20*(B16*Bb1_12 + B26*Bb2_12 + B66*Bb3_12))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_21*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_21*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_22*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_22*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_23*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_23*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_12*D11 + Bb2_12*D12 + Bb3_12*D16) + Bb2_24*(Bb1_12*D12 + Bb2_12*D22 + Bb3_12*D26) + Bb3_24*(Bb1_12*D16 + Bb2_12*D26 + Bb3_12*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_13 + A16*Bm3_13) + Bm3_01*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(A12*Bm1_13 + A26*Bm3_13) + Bm3_02*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(B11*Bm1_13 + B16*Bm3_13) + Bb2_03*(B12*Bm1_13 + B26*Bm3_13) + Bb3_03*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(B11*Bm1_13 + B16*Bm3_13) + Bb2_04*(B12*Bm1_13 + B26*Bm3_13) + Bb3_04*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(B11*Bm1_13 + B16*Bm3_13) + Bb2_05*(B12*Bm1_13 + B26*Bm3_13) + Bb3_05*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(B11*Bm1_13 + B16*Bm3_13) + Bb2_06*(B12*Bm1_13 + B26*Bm3_13) + Bb3_06*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(A11*Bm1_13 + A16*Bm3_13) + Bm3_07*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(A12*Bm1_13 + A26*Bm3_13) + Bm3_08*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_13 + B16*Bm3_13) + Bb2_09*(B12*Bm1_13 + B26*Bm3_13) + Bb3_09*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_13 + B16*Bm3_13) + Bb2_10*(B12*Bm1_13 + B26*Bm3_13) + Bb3_10*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(B11*Bm1_13 + B16*Bm3_13) + Bb2_11*(B12*Bm1_13 + B26*Bm3_13) + Bb3_11*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(B11*Bm1_13 + B16*Bm3_13) + Bb2_12*(B12*Bm1_13 + B26*Bm3_13) + Bb3_12*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_13 + A16*Bm3_13) + Bm3_13*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_13 + A26*Bm3_13) + Bm3_14*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(B11*Bm1_13 + B16*Bm3_13) + Bb2_15*(B12*Bm1_13 + B26*Bm3_13) + Bb3_15*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(B11*Bm1_13 + B16*Bm3_13) + Bb2_16*(B12*Bm1_13 + B26*Bm3_13) + Bb3_16*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_13 + B16*Bm3_13) + Bb2_17*(B12*Bm1_13 + B26*Bm3_13) + Bb3_17*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_13 + B16*Bm3_13) + Bb2_18*(B12*Bm1_13 + B26*Bm3_13) + Bb3_18*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(A11*Bm1_13 + A16*Bm3_13) + Bm3_19*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(A12*Bm1_13 + A26*Bm3_13) + Bm3_20*(A16*Bm1_13 + A66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(B11*Bm1_13 + B16*Bm3_13) + Bb2_21*(B12*Bm1_13 + B26*Bm3_13) + Bb3_21*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(B11*Bm1_13 + B16*Bm3_13) + Bb2_22*(B12*Bm1_13 + B26*Bm3_13) + Bb3_22*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(B11*Bm1_13 + B16*Bm3_13) + Bb2_23*(B12*Bm1_13 + B26*Bm3_13) + Bb3_23*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(B11*Bm1_13 + B16*Bm3_13) + Bb2_24*(B12*Bm1_13 + B26*Bm3_13) + Bb3_24*(B16*Bm1_13 + B66*Bm3_13))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_14 + A16*Bm3_14) + Bm3_01*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(A22*Bm2_14 + A26*Bm3_14) + Bm3_02*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(B12*Bm2_14 + B16*Bm3_14) + Bb2_03*(B22*Bm2_14 + B26*Bm3_14) + Bb3_03*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(B12*Bm2_14 + B16*Bm3_14) + Bb2_04*(B22*Bm2_14 + B26*Bm3_14) + Bb3_04*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(B12*Bm2_14 + B16*Bm3_14) + Bb2_05*(B22*Bm2_14 + B26*Bm3_14) + Bb3_05*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(B12*Bm2_14 + B16*Bm3_14) + Bb2_06*(B22*Bm2_14 + B26*Bm3_14) + Bb3_06*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(A12*Bm2_14 + A16*Bm3_14) + Bm3_07*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(A22*Bm2_14 + A26*Bm3_14) + Bm3_08*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_14 + B16*Bm3_14) + Bb2_09*(B22*Bm2_14 + B26*Bm3_14) + Bb3_09*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_14 + B16*Bm3_14) + Bb2_10*(B22*Bm2_14 + B26*Bm3_14) + Bb3_10*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(B12*Bm2_14 + B16*Bm3_14) + Bb2_11*(B22*Bm2_14 + B26*Bm3_14) + Bb3_11*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(B12*Bm2_14 + B16*Bm3_14) + Bb2_12*(B22*Bm2_14 + B26*Bm3_14) + Bb3_12*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_14 + A16*Bm3_14) + Bm3_13*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_14 + A26*Bm3_14) + Bm3_14*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(B12*Bm2_14 + B16*Bm3_14) + Bb2_15*(B22*Bm2_14 + B26*Bm3_14) + Bb3_15*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(B12*Bm2_14 + B16*Bm3_14) + Bb2_16*(B22*Bm2_14 + B26*Bm3_14) + Bb3_16*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_14 + B16*Bm3_14) + Bb2_17*(B22*Bm2_14 + B26*Bm3_14) + Bb3_17*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_14 + B16*Bm3_14) + Bb2_18*(B22*Bm2_14 + B26*Bm3_14) + Bb3_18*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(A12*Bm2_14 + A16*Bm3_14) + Bm3_19*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(A22*Bm2_14 + A26*Bm3_14) + Bm3_20*(A26*Bm2_14 + A66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(B12*Bm2_14 + B16*Bm3_14) + Bb2_21*(B22*Bm2_14 + B26*Bm3_14) + Bb3_21*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(B12*Bm2_14 + B16*Bm3_14) + Bb2_22*(B22*Bm2_14 + B26*Bm3_14) + Bb3_22*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(B12*Bm2_14 + B16*Bm3_14) + Bb2_23*(B22*Bm2_14 + B26*Bm3_14) + Bb3_23*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(B12*Bm2_14 + B16*Bm3_14) + Bb2_24*(B22*Bm2_14 + B26*Bm3_14) + Bb3_24*(B26*Bm2_14 + B66*Bm3_14))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_15 + B12*Bb2_15 + B16*Bb3_15) + Bm3_01*(B16*Bb1_15 + B26*Bb2_15 + B66*Bb3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_15 + B22*Bb2_15 + B26*Bb3_15) + Bm3_02*(B16*Bb1_15 + B26*Bb2_15 + B66*Bb3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_03*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_03*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_04*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_04*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_05*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_05*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_06*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_06*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_15 + B12*Bb2_15 + B16*Bb3_15) + Bm3_07*(B16*Bb1_15 + B26*Bb2_15 + B66*Bb3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_15 + B22*Bb2_15 + B26*Bb3_15) + Bm3_08*(B16*Bb1_15 + B26*Bb2_15 + B66*Bb3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_09*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_09*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_10*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_10*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_11*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_11*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_12*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_12*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_15 + B12*Bb2_15 + B16*Bb3_15) + Bm3_13*(B16*Bb1_15 + B26*Bb2_15 + B66*Bb3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_15 + B22*Bb2_15 + B26*Bb3_15) + Bm3_14*(B16*Bb1_15 + B26*Bb2_15 + B66*Bb3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_15*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_15*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_16*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_16*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_17*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_17*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_18*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_18*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_15 + B12*Bb2_15 + B16*Bb3_15) + Bm3_19*(B16*Bb1_15 + B26*Bb2_15 + B66*Bb3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_15 + B22*Bb2_15 + B26*Bb3_15) + Bm3_20*(B16*Bb1_15 + B26*Bb2_15 + B66*Bb3_15))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_21*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_21*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_22*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_22*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_23*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_23*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_15*D11 + Bb2_15*D12 + Bb3_15*D16) + Bb2_24*(Bb1_15*D12 + Bb2_15*D22 + Bb3_15*D26) + Bb3_24*(Bb1_15*D16 + Bb2_15*D26 + Bb3_15*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_16 + B12*Bb2_16 + B16*Bb3_16) + Bm3_01*(B16*Bb1_16 + B26*Bb2_16 + B66*Bb3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_16 + B22*Bb2_16 + B26*Bb3_16) + Bm3_02*(B16*Bb1_16 + B26*Bb2_16 + B66*Bb3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_03*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_03*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_04*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_04*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_05*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_05*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_06*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_06*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_16 + B12*Bb2_16 + B16*Bb3_16) + Bm3_07*(B16*Bb1_16 + B26*Bb2_16 + B66*Bb3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_16 + B22*Bb2_16 + B26*Bb3_16) + Bm3_08*(B16*Bb1_16 + B26*Bb2_16 + B66*Bb3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_09*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_09*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_10*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_10*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_11*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_11*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_12*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_12*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_16 + B12*Bb2_16 + B16*Bb3_16) + Bm3_13*(B16*Bb1_16 + B26*Bb2_16 + B66*Bb3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_16 + B22*Bb2_16 + B26*Bb3_16) + Bm3_14*(B16*Bb1_16 + B26*Bb2_16 + B66*Bb3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_15*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_15*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_16*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_16*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_17*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_17*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_18*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_18*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_16 + B12*Bb2_16 + B16*Bb3_16) + Bm3_19*(B16*Bb1_16 + B26*Bb2_16 + B66*Bb3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_16 + B22*Bb2_16 + B26*Bb3_16) + Bm3_20*(B16*Bb1_16 + B26*Bb2_16 + B66*Bb3_16))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_21*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_21*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_22*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_22*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_23*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_23*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_16*D11 + Bb2_16*D12 + Bb3_16*D16) + Bb2_24*(Bb1_16*D12 + Bb2_16*D22 + Bb3_16*D26) + Bb3_24*(Bb1_16*D16 + Bb2_16*D26 + Bb3_16*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_01*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_02*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_03*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_03*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_04*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_04*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_05*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_05*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_06*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_06*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_07*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_08*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_09*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_09*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_10*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_10*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_11*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_11*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_12*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_12*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_13*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_14*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_15*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_15*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_16*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_16*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_17*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_17*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_18*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_18*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + Bm3_19*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + Bm3_20*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_21*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_21*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_22*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_22*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_23*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_23*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_17*D11 + Bb2_17*D12 + Bb3_17*D16) + Bb2_24*(Bb1_17*D12 + Bb2_17*D22 + Bb3_17*D26) + Bb3_24*(Bb1_17*D16 + Bb2_17*D26 + Bb3_17*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_01*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_02*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_03*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_03*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_04*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_04*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_05*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_05*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_06*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_06*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_07*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_08*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_09*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_09*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_10*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_10*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_11*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_11*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_12*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_12*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_13*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_14*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_15*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_15*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_16*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_16*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_17*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_17*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_18*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_18*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + Bm3_19*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + Bm3_20*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_21*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_21*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_22*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_22*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_23*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_23*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_18*D11 + Bb2_18*D12 + Bb3_18*D16) + Bb2_24*(Bb1_18*D12 + Bb2_18*D22 + Bb3_18*D26) + Bb3_24*(Bb1_18*D16 + Bb2_18*D26 + Bb3_18*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A11*Bm1_19 + A16*Bm3_19) + Bm3_01*(A16*Bm1_19 + A66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(A12*Bm1_19 + A26*Bm3_19) + Bm3_02*(A16*Bm1_19 + A66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(B11*Bm1_19 + B16*Bm3_19) + Bb2_03*(B12*Bm1_19 + B26*Bm3_19) + Bb3_03*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(B11*Bm1_19 + B16*Bm3_19) + Bb2_04*(B12*Bm1_19 + B26*Bm3_19) + Bb3_04*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(B11*Bm1_19 + B16*Bm3_19) + Bb2_05*(B12*Bm1_19 + B26*Bm3_19) + Bb3_05*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(B11*Bm1_19 + B16*Bm3_19) + Bb2_06*(B12*Bm1_19 + B26*Bm3_19) + Bb3_06*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(A11*Bm1_19 + A16*Bm3_19) + Bm3_07*(A16*Bm1_19 + A66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(A12*Bm1_19 + A26*Bm3_19) + Bm3_08*(A16*Bm1_19 + A66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B11*Bm1_19 + B16*Bm3_19) + Bb2_09*(B12*Bm1_19 + B26*Bm3_19) + Bb3_09*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B11*Bm1_19 + B16*Bm3_19) + Bb2_10*(B12*Bm1_19 + B26*Bm3_19) + Bb3_10*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(B11*Bm1_19 + B16*Bm3_19) + Bb2_11*(B12*Bm1_19 + B26*Bm3_19) + Bb3_11*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(B11*Bm1_19 + B16*Bm3_19) + Bb2_12*(B12*Bm1_19 + B26*Bm3_19) + Bb3_12*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A11*Bm1_19 + A16*Bm3_19) + Bm3_13*(A16*Bm1_19 + A66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A12*Bm1_19 + A26*Bm3_19) + Bm3_14*(A16*Bm1_19 + A66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(B11*Bm1_19 + B16*Bm3_19) + Bb2_15*(B12*Bm1_19 + B26*Bm3_19) + Bb3_15*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(B11*Bm1_19 + B16*Bm3_19) + Bb2_16*(B12*Bm1_19 + B26*Bm3_19) + Bb3_16*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B11*Bm1_19 + B16*Bm3_19) + Bb2_17*(B12*Bm1_19 + B26*Bm3_19) + Bb3_17*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B11*Bm1_19 + B16*Bm3_19) + Bb2_18*(B12*Bm1_19 + B26*Bm3_19) + Bb3_18*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(A11*Bm1_19 + A16*Bm3_19) + Bm3_19*(A16*Bm1_19 + A66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(A12*Bm1_19 + A26*Bm3_19) + Bm3_20*(A16*Bm1_19 + A66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(B11*Bm1_19 + B16*Bm3_19) + Bb2_21*(B12*Bm1_19 + B26*Bm3_19) + Bb3_21*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(B11*Bm1_19 + B16*Bm3_19) + Bb2_22*(B12*Bm1_19 + B26*Bm3_19) + Bb3_22*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(B11*Bm1_19 + B16*Bm3_19) + Bb2_23*(B12*Bm1_19 + B26*Bm3_19) + Bb3_23*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(B11*Bm1_19 + B16*Bm3_19) + Bb2_24*(B12*Bm1_19 + B26*Bm3_19) + Bb3_24*(B16*Bm1_19 + B66*Bm3_19))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(A12*Bm2_20 + A16*Bm3_20) + Bm3_01*(A26*Bm2_20 + A66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(A22*Bm2_20 + A26*Bm3_20) + Bm3_02*(A26*Bm2_20 + A66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(B12*Bm2_20 + B16*Bm3_20) + Bb2_03*(B22*Bm2_20 + B26*Bm3_20) + Bb3_03*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(B12*Bm2_20 + B16*Bm3_20) + Bb2_04*(B22*Bm2_20 + B26*Bm3_20) + Bb3_04*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(B12*Bm2_20 + B16*Bm3_20) + Bb2_05*(B22*Bm2_20 + B26*Bm3_20) + Bb3_05*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(B12*Bm2_20 + B16*Bm3_20) + Bb2_06*(B22*Bm2_20 + B26*Bm3_20) + Bb3_06*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(A12*Bm2_20 + A16*Bm3_20) + Bm3_07*(A26*Bm2_20 + A66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(A22*Bm2_20 + A26*Bm3_20) + Bm3_08*(A26*Bm2_20 + A66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(B12*Bm2_20 + B16*Bm3_20) + Bb2_09*(B22*Bm2_20 + B26*Bm3_20) + Bb3_09*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(B12*Bm2_20 + B16*Bm3_20) + Bb2_10*(B22*Bm2_20 + B26*Bm3_20) + Bb3_10*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(B12*Bm2_20 + B16*Bm3_20) + Bb2_11*(B22*Bm2_20 + B26*Bm3_20) + Bb3_11*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(B12*Bm2_20 + B16*Bm3_20) + Bb2_12*(B22*Bm2_20 + B26*Bm3_20) + Bb3_12*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(A12*Bm2_20 + A16*Bm3_20) + Bm3_13*(A26*Bm2_20 + A66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(A22*Bm2_20 + A26*Bm3_20) + Bm3_14*(A26*Bm2_20 + A66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(B12*Bm2_20 + B16*Bm3_20) + Bb2_15*(B22*Bm2_20 + B26*Bm3_20) + Bb3_15*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(B12*Bm2_20 + B16*Bm3_20) + Bb2_16*(B22*Bm2_20 + B26*Bm3_20) + Bb3_16*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(B12*Bm2_20 + B16*Bm3_20) + Bb2_17*(B22*Bm2_20 + B26*Bm3_20) + Bb3_17*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(B12*Bm2_20 + B16*Bm3_20) + Bb2_18*(B22*Bm2_20 + B26*Bm3_20) + Bb3_18*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(A12*Bm2_20 + A16*Bm3_20) + Bm3_19*(A26*Bm2_20 + A66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(A22*Bm2_20 + A26*Bm3_20) + Bm3_20*(A26*Bm2_20 + A66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(B12*Bm2_20 + B16*Bm3_20) + Bb2_21*(B22*Bm2_20 + B26*Bm3_20) + Bb3_21*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(B12*Bm2_20 + B16*Bm3_20) + Bb2_22*(B22*Bm2_20 + B26*Bm3_20) + Bb3_22*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(B12*Bm2_20 + B16*Bm3_20) + Bb2_23*(B22*Bm2_20 + B26*Bm3_20) + Bb3_23*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(B12*Bm2_20 + B16*Bm3_20) + Bb2_24*(B22*Bm2_20 + B26*Bm3_20) + Bb3_24*(B26*Bm2_20 + B66*Bm3_20))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_21 + B12*Bb2_21 + B16*Bb3_21) + Bm3_01*(B16*Bb1_21 + B26*Bb2_21 + B66*Bb3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_21 + B22*Bb2_21 + B26*Bb3_21) + Bm3_02*(B16*Bb1_21 + B26*Bb2_21 + B66*Bb3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_03*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_03*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_04*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_04*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_05*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_05*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_06*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_06*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_21 + B12*Bb2_21 + B16*Bb3_21) + Bm3_07*(B16*Bb1_21 + B26*Bb2_21 + B66*Bb3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_21 + B22*Bb2_21 + B26*Bb3_21) + Bm3_08*(B16*Bb1_21 + B26*Bb2_21 + B66*Bb3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_09*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_09*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_10*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_10*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_11*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_11*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_12*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_12*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_21 + B12*Bb2_21 + B16*Bb3_21) + Bm3_13*(B16*Bb1_21 + B26*Bb2_21 + B66*Bb3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_21 + B22*Bb2_21 + B26*Bb3_21) + Bm3_14*(B16*Bb1_21 + B26*Bb2_21 + B66*Bb3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_15*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_15*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_16*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_16*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_17*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_17*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_18*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_18*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_21 + B12*Bb2_21 + B16*Bb3_21) + Bm3_19*(B16*Bb1_21 + B26*Bb2_21 + B66*Bb3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_21 + B22*Bb2_21 + B26*Bb3_21) + Bm3_20*(B16*Bb1_21 + B26*Bb2_21 + B66*Bb3_21))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_21*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_21*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_22*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_22*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_23*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_23*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_21*D11 + Bb2_21*D12 + Bb3_21*D16) + Bb2_24*(Bb1_21*D12 + Bb2_21*D22 + Bb3_21*D26) + Bb3_24*(Bb1_21*D16 + Bb2_21*D26 + Bb3_21*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_22 + B12*Bb2_22 + B16*Bb3_22) + Bm3_01*(B16*Bb1_22 + B26*Bb2_22 + B66*Bb3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_22 + B22*Bb2_22 + B26*Bb3_22) + Bm3_02*(B16*Bb1_22 + B26*Bb2_22 + B66*Bb3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_03*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_03*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_04*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_04*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_05*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_05*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_06*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_06*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_22 + B12*Bb2_22 + B16*Bb3_22) + Bm3_07*(B16*Bb1_22 + B26*Bb2_22 + B66*Bb3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_22 + B22*Bb2_22 + B26*Bb3_22) + Bm3_08*(B16*Bb1_22 + B26*Bb2_22 + B66*Bb3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_09*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_09*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_10*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_10*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_11*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_11*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_12*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_12*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_22 + B12*Bb2_22 + B16*Bb3_22) + Bm3_13*(B16*Bb1_22 + B26*Bb2_22 + B66*Bb3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_22 + B22*Bb2_22 + B26*Bb3_22) + Bm3_14*(B16*Bb1_22 + B26*Bb2_22 + B66*Bb3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_15*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_15*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_16*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_16*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_17*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_17*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_18*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_18*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_22 + B12*Bb2_22 + B16*Bb3_22) + Bm3_19*(B16*Bb1_22 + B26*Bb2_22 + B66*Bb3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_22 + B22*Bb2_22 + B26*Bb3_22) + Bm3_20*(B16*Bb1_22 + B26*Bb2_22 + B66*Bb3_22))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_21*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_21*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_22*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_22*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_23*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_23*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_22*D11 + Bb2_22*D12 + Bb3_22*D16) + Bb2_24*(Bb1_22*D12 + Bb2_22*D22 + Bb3_22*D26) + Bb3_24*(Bb1_22*D16 + Bb2_22*D26 + Bb3_22*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_23 + B12*Bb2_23 + B16*Bb3_23) + Bm3_01*(B16*Bb1_23 + B26*Bb2_23 + B66*Bb3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_23 + B22*Bb2_23 + B26*Bb3_23) + Bm3_02*(B16*Bb1_23 + B26*Bb2_23 + B66*Bb3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_03*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_03*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_04*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_04*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_05*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_05*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_06*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_06*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_23 + B12*Bb2_23 + B16*Bb3_23) + Bm3_07*(B16*Bb1_23 + B26*Bb2_23 + B66*Bb3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_23 + B22*Bb2_23 + B26*Bb3_23) + Bm3_08*(B16*Bb1_23 + B26*Bb2_23 + B66*Bb3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_09*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_09*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_10*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_10*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_11*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_11*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_12*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_12*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_23 + B12*Bb2_23 + B16*Bb3_23) + Bm3_13*(B16*Bb1_23 + B26*Bb2_23 + B66*Bb3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_23 + B22*Bb2_23 + B26*Bb3_23) + Bm3_14*(B16*Bb1_23 + B26*Bb2_23 + B66*Bb3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_15*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_15*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_16*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_16*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_17*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_17*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_18*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_18*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_23 + B12*Bb2_23 + B16*Bb3_23) + Bm3_19*(B16*Bb1_23 + B26*Bb2_23 + B66*Bb3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_23 + B22*Bb2_23 + B26*Bb3_23) + Bm3_20*(B16*Bb1_23 + B26*Bb2_23 + B66*Bb3_23))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_21*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_21*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_22*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_22*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_23*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_23*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_23*D11 + Bb2_23*D12 + Bb3_23*D16) + Bb2_24*(Bb1_23*D12 + Bb2_23*D22 + Bb3_23*D26) + Bb3_24*(Bb1_23*D16 + Bb2_23*D26 + Bb3_23*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_01*(B11*Bb1_24 + B12*Bb2_24 + B16*Bb3_24) + Bm3_01*(B16*Bb1_24 + B26*Bb2_24 + B66*Bb3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_02*(B12*Bb1_24 + B22*Bb2_24 + B26*Bb3_24) + Bm3_02*(B16*Bb1_24 + B26*Bb2_24 + B66*Bb3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_03*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_03*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_03*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_04*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_04*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_04*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_05*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_05*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_05*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_06*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_06*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_06*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_07*(B11*Bb1_24 + B12*Bb2_24 + B16*Bb3_24) + Bm3_07*(B16*Bb1_24 + B26*Bb2_24 + B66*Bb3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_08*(B12*Bb1_24 + B22*Bb2_24 + B26*Bb3_24) + Bm3_08*(B16*Bb1_24 + B26*Bb2_24 + B66*Bb3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_09*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_09*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_09*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_10*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_10*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_10*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_11*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_11*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_11*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_12*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_12*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_12*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_13*(B11*Bb1_24 + B12*Bb2_24 + B16*Bb3_24) + Bm3_13*(B16*Bb1_24 + B26*Bb2_24 + B66*Bb3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_14*(B12*Bb1_24 + B22*Bb2_24 + B26*Bb3_24) + Bm3_14*(B16*Bb1_24 + B26*Bb2_24 + B66*Bb3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_15*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_15*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_15*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_16*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_16*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_16*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_17*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_17*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_17*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_18*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_18*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_18*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm1_19*(B11*Bb1_24 + B12*Bb2_24 + B16*Bb3_24) + Bm3_19*(B16*Bb1_24 + B26*Bb2_24 + B66*Bb3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bm2_20*(B12*Bb1_24 + B22*Bb2_24 + B26*Bb3_24) + Bm3_20*(B16*Bb1_24 + B26*Bb2_24 + B66*Bb3_24))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_21*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_21*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_21*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_22*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_22*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_22*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_23*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_23*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_23*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))
                k += 1
                KC0v[k] += 0.25*lex*ley*weight*(Bb1_24*(Bb1_24*D11 + Bb2_24*D12 + Bb3_24*D16) + Bb2_24*(Bb1_24*D12 + Bb2_24*D22 + Bb3_24*D26) + Bb3_24*(Bb1_24*D16 + Bb2_24*D26 + Bb3_24*D66))


cpdef void update_KG(np.ndarray[cDOUBLE, ndim=1] u,
        BFSPlate2D plate,
        np.ndarray[cDOUBLE, ndim=1] points,
        np.ndarray[cDOUBLE, ndim=1] weights,
        np.ndarray[cINT, ndim=1] KGr,
        np.ndarray[cINT, ndim=1] KGc,
        np.ndarray[cDOUBLE, ndim=1] KGv,
        ):
    """Update sparse vectors for geometric stiffness matrix KG

    Properties
    ----------
    u : np.array
        Global displacement vector
    plate : `.BFSPlate2D` object
        The plate element being added to KG
    points : np.array
        Integration poins
    weights : np.array
        Integration weights
    KGr : np.array
       Array to store row positions of sparse values
    KGc : np.array
       Array to store column positions of sparse values
    KGv : np.array
        Array to store sparse values

    """
    cdef double *ue
    cdef cINT c1, c2, c3, c4, i, j, k, nint
    cdef double lex, ley, Nxx, Nyy, Nxy
    cdef double xi, eta, weight_xi, weight_eta, weight
    cdef double Bm1_01, Bm1_07, Bm1_13, Bm1_19, Bm2_02, Bm2_08, Bm2_14, Bm2_20, Bm3_01, Bm3_02, Bm3_07, Bm3_08, Bm3_13, Bm3_14, Bm3_19, Bm3_20
    cdef double Bb1_03, Bb1_04, Bb1_05, Bb1_06, Bb1_09, Bb1_10, Bb1_11, Bb1_12, Bb1_15, Bb1_16, Bb1_17, Bb1_18, Bb1_21, Bb1_22, Bb1_23, Bb1_24, Bb2_03, Bb2_04, Bb2_05, Bb2_06, Bb2_09, Bb2_10, Bb2_11, Bb2_12, Bb2_15, Bb2_16, Bb2_17, Bb2_18, Bb2_21, Bb2_22, Bb2_23, Bb2_24, Bb3_03, Bb3_04, Bb3_05, Bb3_06, Bb3_09, Bb3_10, Bb3_11, Bb3_12, Bb3_15, Bb3_16, Bb3_17, Bb3_18, Bb3_21, Bb3_22, Bb3_23, Bb3_24
    cdef double A11, A12, A16, A22, A26, A66
    cdef double B11, B12, B16, B22, B26, B66
    cdef double G1_03, G1_04, G1_05, G1_06, G1_09, G1_10, G1_11, G1_12, G1_15, G1_16, G1_17, G1_18, G1_21, G1_22, G1_23, G1_24, G2_03, G2_04, G2_05, G2_06, G2_09, G2_10, G2_11, G2_12, G2_15, G2_16, G2_17, G2_18, G2_21, G2_22, G2_23, G2_24, NG1_01, NG2_01

    with nogil:
        A11 = plate.ABD[0, 0]
        A12 = plate.ABD[0, 1]
        A16 = plate.ABD[0, 2]
        A22 = plate.ABD[1, 1]
        A26 = plate.ABD[1, 2]
        A66 = plate.ABD[2, 2]
        B11 = plate.ABD[0, 0+3]
        B12 = plate.ABD[0, 1+3]
        B16 = plate.ABD[0, 2+3]
        B22 = plate.ABD[1, 1+3]
        B26 = plate.ABD[1, 2+3]
        B66 = plate.ABD[2, 2+3]

        lex = plate.lex
        ley = plate.ley

        # positions the global matrices
        c1 = plate.c1
        c2 = plate.c2
        c3 = plate.c3
        c4 = plate.c4

        for i in range(DOF):
            plate.u[0*DOF + i] = u[c1 + i]
        for i in range(DOF):
            plate.u[1*DOF + i] = u[c2 + i]
        for i in range(DOF):
            plate.u[2*DOF + i] = u[c3 + i]
        for i in range(DOF):
            plate.u[3*DOF + i] = u[c4 + i]

        ue = &plate.u[0]

        nint = points.shape[0]

        k = plate.init_k_KG
        KGr[k] = 2+c1
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 2+c1
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 3+c1
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 4+c1
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 5+c1
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 2+c2
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 3+c2
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 4+c2
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 5+c2
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 2+c3
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 3+c3
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 4+c3
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 5+c3
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 2+c4
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 3+c4
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 4+c4
        KGc[k] = 5+c4
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 2+c1
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 3+c1
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 4+c1
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 5+c1
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 2+c2
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 3+c2
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 4+c2
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 5+c2
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 2+c3
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 3+c3
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 4+c3
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 5+c3
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 2+c4
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 3+c4
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 4+c4
        k += 1
        KGr[k] = 5+c4
        KGc[k] = 5+c4

        for i in range(nint):
            xi = points[i]
            weight_xi = weights[i]
            for j in range(nint):
                eta = points[j]
                weight_eta = weights[j]
                weight = weight_xi*weight_eta

                Bm1_01 = 2*(0.25*eta - 0.25)/lex
                Bm1_07 = 2*(0.25 - 0.25*eta)/lex
                Bm1_13 = 2*(0.25*eta + 0.25)/lex
                Bm1_19 = 2*(-0.25*eta - 0.25)/lex
                Bm2_02 = 2*(0.25*xi - 0.25)/ley
                Bm2_08 = 2*(-0.25*xi - 0.25)/ley
                Bm2_14 = 2*(0.25*xi + 0.25)/ley
                Bm2_20 = 2*(0.25 - 0.25*xi)/ley
                Bm3_01 = 2*(0.25*xi - 0.25)/ley
                Bm3_02 = 2*(0.25*eta - 0.25)/lex
                Bm3_07 = 2*(-0.25*xi - 0.25)/ley
                Bm3_08 = 2*(0.25 - 0.25*eta)/lex
                Bm3_13 = 2*(0.25*xi + 0.25)/ley
                Bm3_14 = 2*(0.25*eta + 0.25)/lex
                Bm3_19 = 2*(0.25 - 0.25*xi)/ley
                Bm3_20 = 2*(-0.25*eta - 0.25)/lex

                Bb1_03 = -1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_04 = (0.25 - 0.75*xi)*(eta - 1)**2*(eta + 2)/lex
                Bb1_05 = -0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_06 = ley*(0.125 - 0.375*xi)*(eta - 1)**2*(eta + 1)/lex
                Bb1_09 = 1.5*xi*(eta - 1)**2*(eta + 2)/lex**2
                Bb1_10 = -(eta - 1)**2*(eta + 2)*(0.75*xi + 0.25)/lex
                Bb1_11 = 0.75*ley*xi*(eta - 1)**2*(eta + 1)/lex**2
                Bb1_12 = -ley*(eta - 1)**2*(eta + 1)*(0.375*xi + 0.125)/lex
                Bb1_15 = -1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_16 = (eta - 2)*(eta + 1)**2*(0.75*xi + 0.25)/lex
                Bb1_17 = 0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_18 = -ley*(eta - 1)*(eta + 1)**2*(0.375*xi + 0.125)/lex
                Bb1_21 = 1.5*xi*(eta - 2)*(eta + 1)**2/lex**2
                Bb1_22 = (eta - 2)*(eta + 1)**2*(0.75*xi - 0.25)/lex
                Bb1_23 = -0.75*ley*xi*(eta - 1)*(eta + 1)**2/lex**2
                Bb1_24 = ley*(0.125 - 0.375*xi)*(eta - 1)*(eta + 1)**2/lex
                Bb2_03 = -1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_04 = -0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_05 = (0.25 - 0.75*eta)*(xi - 1)**2*(xi + 2)/ley
                Bb2_06 = lex*(0.125 - 0.375*eta)*(xi - 1)**2*(xi + 1)/ley
                Bb2_09 = 1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_10 = -0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_11 = (0.75*eta - 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_12 = lex*(0.125 - 0.375*eta)*(xi - 1)*(xi + 1)**2/ley
                Bb2_15 = -1.5*eta*(xi - 2)*(xi + 1)**2/ley**2
                Bb2_16 = 0.75*eta*lex*(xi - 1)*(xi + 1)**2/ley**2
                Bb2_17 = (0.75*eta + 0.25)*(xi - 2)*(xi + 1)**2/ley
                Bb2_18 = -lex*(0.375*eta + 0.125)*(xi - 1)*(xi + 1)**2/ley
                Bb2_21 = 1.5*eta*(xi - 1)**2*(xi + 2)/ley**2
                Bb2_22 = 0.75*eta*lex*(xi - 1)**2*(xi + 1)/ley**2
                Bb2_23 = -(0.75*eta + 0.25)*(xi - 1)**2*(xi + 2)/ley
                Bb2_24 = -lex*(0.375*eta + 0.125)*(xi - 1)**2*(xi + 1)/ley
                Bb3_03 = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
                Bb3_04 = (-2.25*eta**2*xi**2 + 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 - 1.5*xi - 0.75)/ley
                Bb3_05 = (-2.25*eta**2*xi**2 + 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_06 = -(eta - 1)*(xi - 1)*(0.125*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.5*(eta + 1)*(xi + 1))
                Bb3_09 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_10 = (-2.25*eta**2*xi**2 - 1.5*eta**2*xi + 0.75*eta**2 + 2.25*xi**2 + 1.5*xi - 0.75)/ley
                Bb3_11 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_12 = -(eta - 1)*(xi + 1)*(0.25*(eta - 1)*(xi - 1) + 0.125*(eta - 1)*(xi + 1) + 0.5*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))
                Bb3_15 = (-4.5*eta**2*xi**2 + 4.5*eta**2 + 4.5*xi**2 - 4.5)/(lex*ley)
                Bb3_16 = 1.0*(2.25*eta**2*xi**2 + 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 - 1.5*xi + 0.75)/ley
                Bb3_17 = 1.0*(2.25*eta**2*xi**2 - 2.25*eta**2 + 1.5*eta*xi**2 - 1.5*eta - 0.75*xi**2 + 0.75)/lex
                Bb3_18 = -(eta + 1)*(xi + 1)*(0.5*(eta - 1)*(xi - 1) + 0.25*(eta - 1)*(xi + 1) + 0.25*(eta + 1)*(xi - 1) + 0.125*(eta + 1)*(xi + 1))
                Bb3_21 = 4.5*(eta**2*xi**2 - eta**2 - xi**2 + 1)/(lex*ley)
                Bb3_22 = 1.0*(2.25*eta**2*xi**2 - 1.5*eta**2*xi - 0.75*eta**2 - 2.25*xi**2 + 1.5*xi + 0.75)/ley
                Bb3_23 = (-2.25*eta**2*xi**2 + 2.25*eta**2 - 1.5*eta*xi**2 + 1.5*eta + 0.75*xi**2 - 0.75)/lex
                Bb3_24 = -(eta + 1)*(xi - 1)*(0.25*(eta - 1)*(xi - 1) + 0.5*(eta - 1)*(xi + 1) + 0.125*(eta + 1)*(xi - 1) + 0.25*(eta + 1)*(xi + 1))

                G1_03 = 2*(0.0625*(-eta - 2)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_04 = 2*(0.03125*lex*(-eta - 2)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_05 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(-xi - 2)*(2*xi - 2) - 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_06 = 2*(0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(-xi - 1)*(2*xi - 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)**2)/lex
                G1_09 = 2*((-eta - 2)*(eta - 1)**2*(0.125*xi + 0.125)*(xi - 2) + 0.0625*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_10 = 2*(-0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(-eta - 2)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_11 = 2*(0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi - 2)*(2*xi + 2) + 0.03125*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_12 = 2*(-0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi - 1)*(2*xi + 2) - 0.015625*lex*ley*(-eta - 1)*(eta - 1)**2*(xi + 1)**2)/lex
                G1_15 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(xi - 2)*(2*xi + 2) + 0.0625*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_16 = 2*(-0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)*(2*xi + 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_17 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 2)*(2*xi + 2) - 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_18 = 2*(0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)*(2*xi + 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi + 1)**2)/lex
                G1_21 = 2*(0.0625*(eta - 2)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) - 0.0625*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_22 = 2*(0.03125*lex*(eta - 2)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) - 0.03125*lex*(eta - 2)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_23 = 2*(-0.03125*ley*(eta - 1)*(eta + 1)**2*(-xi - 2)*(2*xi - 2) + 0.03125*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
                G1_24 = 2*(-0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(-xi - 1)*(2*xi - 2) + 0.015625*lex*ley*(eta - 1)*(eta + 1)**2*(xi - 1)**2)/lex
                G2_03 = 2*((-eta - 2)*(0.125*eta - 0.125)*(-xi - 2)*(xi - 1)**2 - 0.0625*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_04 = 2*(0.03125*lex*(-eta - 2)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.03125*lex*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_05 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta - 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_06 = 2*(0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta - 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_09 = 2*(0.0625*(-eta - 2)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.0625*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_10 = 2*(-0.03125*lex*(-eta - 2)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.03125*lex*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_11 = 2*(0.03125*ley*(-eta - 1)*(2*eta - 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta - 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_12 = 2*(-0.015625*lex*ley*(-eta - 1)*(2*eta - 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta - 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_15 = 2*((0.125*eta + 0.125)*(eta - 2)*(xi - 2)*(xi + 1)**2 + 0.0625*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_16 = 2*(-0.03125*lex*(eta - 2)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 - 0.03125*lex*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_17 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(xi - 2)*(xi + 1)**2 - 0.03125*ley*(eta + 1)**2*(xi - 2)*(xi + 1)**2)/ley
                G2_18 = 2*(0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(xi - 1)*(xi + 1)**2 + 0.015625*lex*ley*(eta + 1)**2*(xi - 1)*(xi + 1)**2)/ley
                G2_21 = 2*((0.125*eta + 0.125)*(eta - 2)*(-xi - 2)*(xi - 1)**2 + 0.0625*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_22 = 2*(0.03125*lex*(eta - 2)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 + 0.03125*lex*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley
                G2_23 = 2*(-0.03125*ley*(eta - 1)*(2*eta + 2)*(-xi - 2)*(xi - 1)**2 - 0.03125*ley*(eta + 1)**2*(-xi - 2)*(xi - 1)**2)/ley
                G2_24 = 2*(-0.015625*lex*ley*(eta - 1)*(2*eta + 2)*(-xi - 1)*(xi - 1)**2 - 0.015625*lex*ley*(eta + 1)**2*(-xi - 1)*(xi - 1)**2)/ley

                Nxx = ue[0]*(A11*Bm1_01 + A16*Bm3_01) + ue[10]*(B11*Bb1_11 + B12*Bb2_11 + B16*Bb3_11) + ue[11]*(B11*Bb1_12 + B12*Bb2_12 + B16*Bb3_12) + ue[12]*(A11*Bm1_13 + A16*Bm3_13) + ue[13]*(A12*Bm2_14 + A16*Bm3_14) + ue[14]*(B11*Bb1_15 + B12*Bb2_15 + B16*Bb3_15) + ue[15]*(B11*Bb1_16 + B12*Bb2_16 + B16*Bb3_16) + ue[16]*(B11*Bb1_17 + B12*Bb2_17 + B16*Bb3_17) + ue[17]*(B11*Bb1_18 + B12*Bb2_18 + B16*Bb3_18) + ue[18]*(A11*Bm1_19 + A16*Bm3_19) + ue[19]*(A12*Bm2_20 + A16*Bm3_20) + ue[1]*(A12*Bm2_02 + A16*Bm3_02) + ue[20]*(B11*Bb1_21 + B12*Bb2_21 + B16*Bb3_21) + ue[21]*(B11*Bb1_22 + B12*Bb2_22 + B16*Bb3_22) + ue[22]*(B11*Bb1_23 + B12*Bb2_23 + B16*Bb3_23) + ue[23]*(B11*Bb1_24 + B12*Bb2_24 + B16*Bb3_24) + ue[2]*(B11*Bb1_03 + B12*Bb2_03 + B16*Bb3_03) + ue[3]*(B11*Bb1_04 + B12*Bb2_04 + B16*Bb3_04) + ue[4]*(B11*Bb1_05 + B12*Bb2_05 + B16*Bb3_05) + ue[5]*(B11*Bb1_06 + B12*Bb2_06 + B16*Bb3_06) + ue[6]*(A11*Bm1_07 + A16*Bm3_07) + ue[7]*(A12*Bm2_08 + A16*Bm3_08) + ue[8]*(B11*Bb1_09 + B12*Bb2_09 + B16*Bb3_09) + ue[9]*(B11*Bb1_10 + B12*Bb2_10 + B16*Bb3_10)
                Nyy = ue[0]*(A12*Bm1_01 + A26*Bm3_01) + ue[10]*(B12*Bb1_11 + B22*Bb2_11 + B26*Bb3_11) + ue[11]*(B12*Bb1_12 + B22*Bb2_12 + B26*Bb3_12) + ue[12]*(A12*Bm1_13 + A26*Bm3_13) + ue[13]*(A22*Bm2_14 + A26*Bm3_14) + ue[14]*(B12*Bb1_15 + B22*Bb2_15 + B26*Bb3_15) + ue[15]*(B12*Bb1_16 + B22*Bb2_16 + B26*Bb3_16) + ue[16]*(B12*Bb1_17 + B22*Bb2_17 + B26*Bb3_17) + ue[17]*(B12*Bb1_18 + B22*Bb2_18 + B26*Bb3_18) + ue[18]*(A12*Bm1_19 + A26*Bm3_19) + ue[19]*(A22*Bm2_20 + A26*Bm3_20) + ue[1]*(A22*Bm2_02 + A26*Bm3_02) + ue[20]*(B12*Bb1_21 + B22*Bb2_21 + B26*Bb3_21) + ue[21]*(B12*Bb1_22 + B22*Bb2_22 + B26*Bb3_22) + ue[22]*(B12*Bb1_23 + B22*Bb2_23 + B26*Bb3_23) + ue[23]*(B12*Bb1_24 + B22*Bb2_24 + B26*Bb3_24) + ue[2]*(B12*Bb1_03 + B22*Bb2_03 + B26*Bb3_03) + ue[3]*(B12*Bb1_04 + B22*Bb2_04 + B26*Bb3_04) + ue[4]*(B12*Bb1_05 + B22*Bb2_05 + B26*Bb3_05) + ue[5]*(B12*Bb1_06 + B22*Bb2_06 + B26*Bb3_06) + ue[6]*(A12*Bm1_07 + A26*Bm3_07) + ue[7]*(A22*Bm2_08 + A26*Bm3_08) + ue[8]*(B12*Bb1_09 + B22*Bb2_09 + B26*Bb3_09) + ue[9]*(B12*Bb1_10 + B22*Bb2_10 + B26*Bb3_10)
                Nxy = ue[0]*(A16*Bm1_01 + A66*Bm3_01) + ue[10]*(B16*Bb1_11 + B26*Bb2_11 + B66*Bb3_11) + ue[11]*(B16*Bb1_12 + B26*Bb2_12 + B66*Bb3_12) + ue[12]*(A16*Bm1_13 + A66*Bm3_13) + ue[13]*(A26*Bm2_14 + A66*Bm3_14) + ue[14]*(B16*Bb1_15 + B26*Bb2_15 + B66*Bb3_15) + ue[15]*(B16*Bb1_16 + B26*Bb2_16 + B66*Bb3_16) + ue[16]*(B16*Bb1_17 + B26*Bb2_17 + B66*Bb3_17) + ue[17]*(B16*Bb1_18 + B26*Bb2_18 + B66*Bb3_18) + ue[18]*(A16*Bm1_19 + A66*Bm3_19) + ue[19]*(A26*Bm2_20 + A66*Bm3_20) + ue[1]*(A26*Bm2_02 + A66*Bm3_02) + ue[20]*(B16*Bb1_21 + B26*Bb2_21 + B66*Bb3_21) + ue[21]*(B16*Bb1_22 + B26*Bb2_22 + B66*Bb3_22) + ue[22]*(B16*Bb1_23 + B26*Bb2_23 + B66*Bb3_23) + ue[23]*(B16*Bb1_24 + B26*Bb2_24 + B66*Bb3_24) + ue[2]*(B16*Bb1_03 + B26*Bb2_03 + B66*Bb3_03) + ue[3]*(B16*Bb1_04 + B26*Bb2_04 + B66*Bb3_04) + ue[4]*(B16*Bb1_05 + B26*Bb2_05 + B66*Bb3_05) + ue[5]*(B16*Bb1_06 + B26*Bb2_06 + B66*Bb3_06) + ue[6]*(A16*Bm1_07 + A66*Bm3_07) + ue[7]*(A26*Bm2_08 + A66*Bm3_08) + ue[8]*(B16*Bb1_09 + B26*Bb2_09 + B66*Bb3_09) + ue[9]*(B16*Bb1_10 + B26*Bb2_10 + B66*Bb3_10)

                k = plate.init_k_KG
                KGv[k] += G1_03*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_03*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_04*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_05*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_06*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_09*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_10*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_11*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_12*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_15*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_16*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_17*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_18*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_21*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_22*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_23*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_03*Nxx*lex*ley*weight + 0.25*G2_03*Nxy*lex*ley*weight) + G2_24*(0.25*G1_03*Nxy*lex*ley*weight + 0.25*G2_03*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_03*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_04*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_05*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_06*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_09*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_10*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_11*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_12*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_15*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_16*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_17*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_18*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_21*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_22*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_23*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_04*Nxx*lex*ley*weight + 0.25*G2_04*Nxy*lex*ley*weight) + G2_24*(0.25*G1_04*Nxy*lex*ley*weight + 0.25*G2_04*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_03*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_04*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_05*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_06*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_09*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_10*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_11*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_12*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_15*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_16*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_17*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_18*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_21*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_22*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_23*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_05*Nxx*lex*ley*weight + 0.25*G2_05*Nxy*lex*ley*weight) + G2_24*(0.25*G1_05*Nxy*lex*ley*weight + 0.25*G2_05*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_03*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_04*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_05*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_06*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_09*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_10*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_11*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_12*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_15*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_16*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_17*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_18*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_21*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_22*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_23*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_06*Nxx*lex*ley*weight + 0.25*G2_06*Nxy*lex*ley*weight) + G2_24*(0.25*G1_06*Nxy*lex*ley*weight + 0.25*G2_06*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_03*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_04*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_05*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_06*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_09*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_10*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_11*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_12*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_15*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_16*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_17*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_18*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_21*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_22*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_23*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_09*Nxx*lex*ley*weight + 0.25*G2_09*Nxy*lex*ley*weight) + G2_24*(0.25*G1_09*Nxy*lex*ley*weight + 0.25*G2_09*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_03*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_04*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_05*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_06*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_09*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_10*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_11*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_12*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_15*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_16*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_17*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_18*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_21*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_22*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_23*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_10*Nxx*lex*ley*weight + 0.25*G2_10*Nxy*lex*ley*weight) + G2_24*(0.25*G1_10*Nxy*lex*ley*weight + 0.25*G2_10*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_03*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_04*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_05*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_06*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_09*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_10*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_11*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_12*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_15*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_16*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_17*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_18*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_21*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_22*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_23*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_11*Nxx*lex*ley*weight + 0.25*G2_11*Nxy*lex*ley*weight) + G2_24*(0.25*G1_11*Nxy*lex*ley*weight + 0.25*G2_11*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_03*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_04*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_05*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_06*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_09*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_10*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_11*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_12*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_15*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_16*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_17*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_18*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_21*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_22*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_23*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_12*Nxx*lex*ley*weight + 0.25*G2_12*Nxy*lex*ley*weight) + G2_24*(0.25*G1_12*Nxy*lex*ley*weight + 0.25*G2_12*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_03*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_04*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_05*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_06*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_09*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_10*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_11*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_12*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_15*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_16*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_17*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_18*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_21*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_22*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_23*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_15*Nxx*lex*ley*weight + 0.25*G2_15*Nxy*lex*ley*weight) + G2_24*(0.25*G1_15*Nxy*lex*ley*weight + 0.25*G2_15*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_03*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_04*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_05*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_06*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_09*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_10*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_11*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_12*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_15*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_16*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_17*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_18*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_21*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_22*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_23*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_16*Nxx*lex*ley*weight + 0.25*G2_16*Nxy*lex*ley*weight) + G2_24*(0.25*G1_16*Nxy*lex*ley*weight + 0.25*G2_16*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_03*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_04*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_05*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_06*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_09*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_10*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_11*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_12*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_15*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_16*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_17*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_18*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_21*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_22*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_23*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_17*Nxx*lex*ley*weight + 0.25*G2_17*Nxy*lex*ley*weight) + G2_24*(0.25*G1_17*Nxy*lex*ley*weight + 0.25*G2_17*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_03*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_04*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_05*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_06*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_09*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_10*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_11*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_12*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_15*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_16*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_17*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_18*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_21*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_22*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_23*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_18*Nxx*lex*ley*weight + 0.25*G2_18*Nxy*lex*ley*weight) + G2_24*(0.25*G1_18*Nxy*lex*ley*weight + 0.25*G2_18*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_03*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_04*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_05*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_06*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_09*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_10*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_11*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_12*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_15*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_16*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_17*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_18*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_21*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_22*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_23*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_21*Nxx*lex*ley*weight + 0.25*G2_21*Nxy*lex*ley*weight) + G2_24*(0.25*G1_21*Nxy*lex*ley*weight + 0.25*G2_21*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_03*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_04*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_05*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_06*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_09*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_10*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_11*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_12*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_15*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_16*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_17*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_18*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_21*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_22*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_23*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_22*Nxx*lex*ley*weight + 0.25*G2_22*Nxy*lex*ley*weight) + G2_24*(0.25*G1_22*Nxy*lex*ley*weight + 0.25*G2_22*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_03*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_04*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_05*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_06*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_09*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_10*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_11*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_12*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_15*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_16*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_17*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_18*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_21*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_22*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_23*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_23*Nxx*lex*ley*weight + 0.25*G2_23*Nxy*lex*ley*weight) + G2_24*(0.25*G1_23*Nxy*lex*ley*weight + 0.25*G2_23*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_03*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_03*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_04*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_04*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_05*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_05*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_06*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_06*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_09*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_09*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_10*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_10*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_11*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_11*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_12*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_12*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_15*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_15*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_16*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_16*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_17*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_17*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_18*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_18*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_21*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_21*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_22*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_22*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_23*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_23*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)
                k += 1
                KGv[k] += G1_24*(0.25*G1_24*Nxx*lex*ley*weight + 0.25*G2_24*Nxy*lex*ley*weight) + G2_24*(0.25*G1_24*Nxy*lex*ley*weight + 0.25*G2_24*Nyy*lex*ley*weight)


cpdef void update_M(BFSPlate2D plate,
        np.ndarray[cINT, ndim=1] Mr,
        np.ndarray[cINT, ndim=1] Mc,
        np.ndarray[cDOUBLE, ndim=1] Mv,
        ):
    """Update sparse vectors for mass matrix M

    Properties
    ----------
    plate : `.BFSPlate2D` object
        The plate element being added to M
    Mr : np.array
        Array to store row positions of sparse values
    Mc : np.array
        Array to store column positions of sparse values
    Mv : np.array
        Array to store sparse values

    """
    cdef cINT c1, c2, c3, c4, k
    cdef double lex, ley, h, rho

    with nogil:
        lex = plate.lex
        ley = plate.ley
        h = plate.h
        rho = plate.rho

        # positions the global matrices
        c1 = plate.c1
        c2 = plate.c2
        c3 = plate.c3
        c4 = plate.c4

        k = plate.init_k_M
        Mr[k] = 0+c1
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 0+c1
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 1+c1
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 2+c1
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 3+c1
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 4+c1
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 5+c1
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 0+c2
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 1+c2
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 2+c2
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 3+c2
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 4+c2
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 5+c2
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 0+c3
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 1+c3
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 2+c3
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 3+c3
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 4+c3
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 5+c3
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 0+c1
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 0+c2
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 0+c3
        k += 1
        Mr[k] = 0+c4
        Mc[k] = 0+c4
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 1+c1
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 1+c2
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 1+c3
        k += 1
        Mr[k] = 1+c4
        Mc[k] = 1+c4
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 2+c4
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 3+c4
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 4+c4
        Mc[k] = 5+c4
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 2+c1
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 3+c1
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 4+c1
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 5+c1
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 2+c2
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 3+c2
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 4+c2
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 5+c2
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 2+c3
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 3+c3
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 4+c3
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 5+c3
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 2+c4
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 3+c4
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 4+c4
        k += 1
        Mr[k] = 5+c4
        Mc[k] = 5+c4

        k = plate.init_k_M
        Mv[k] += 0.111111111111111*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555556*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0277777777777778*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555555*h*lex*ley*rho
        k += 1
        Mv[k] += 0.111111111111111*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555556*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0277777777777778*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555555*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0371428571428571*h**3*lex*rho/ley + 0.0371428571428571*h**3*ley*rho/lex + 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho + 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0128571428571429*h**3*lex*rho/ley - 0.0371428571428571*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho - 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 - 0.00523809523809524*h**2*ley**2 + 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0128571428571429*h**3*lex*rho/ley - 0.0128571428571429*h**3*ley*rho/lex + 0.0165306122448979*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho - 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 - 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0371428571428571*h**3*lex*rho/ley + 0.0128571428571429*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho + 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 - 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho + 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000952380952380952*h**3*lex**3*rho/ley + 0.00412698412698413*h**3*lex*ley*rho + 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho + 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000714285714285714*h**3*lex**3*rho/ley - 0.00103174603174603*h**3*lex*ley*rho - 0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho + 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000714285714285714*h**3*lex**3*rho/ley - 0.000357142857142857*h**3*lex*ley*rho - 0.000918367346938778*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-5.95238095238095e-5*h**2*lex**2 + 8.59788359788358e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho + 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000952380952380952*h**3*lex**3*rho/ley + 0.00142857142857143*h**3*lex*ley*rho + 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 - 0.000343915343915344*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00412698412698413*h**2*lex**2 + 0.000952380952380952*h**2*ley**2 + 0.00353741496598639*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 - 0.00523809523809524*h**2*ley**2 + 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00142857142857143*h**2*lex**2 - 0.000952380952380952*h**2*ley**2 + 0.00122448979591837*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(-0.000343915343915344*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 + 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000357142857142856*h**2*lex**2 + 0.000714285714285715*h**2*ley**2 - 0.000918367346938775*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(8.59788359788359e-5*h**2*lex**2 - 5.95238095238097e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.0030952380952381*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 + 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.00103174603174603*h**2*lex**2 + 0.000714285714285714*h**2*ley**2 + 0.0026530612244898*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(0.000105820105820106*h**2*lex**2 + 0.000105820105820106*h**2*ley**2 + 9.0702947845805e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000343915343915344*h**2*lex**2 - 7.93650793650794e-5*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(7.93650793650794e-5*h**2*lex**2 + 2.64550264550264e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 - 8.59788359788358e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-8.59788359788359e-5*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(1.98412698412698e-5*h**2*lex**2 + 1.98412698412698e-5*h**2*ley**2 + 5.10204081632653e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-7.93650793650794e-5*h**2*lex**2 + 0.000343915343915344*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(2.64550264550265e-5*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0555555555555556*h*lex*ley*rho
        k += 1
        Mv[k] += 0.111111111111111*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555555*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0277777777777778*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555556*h*lex*ley*rho
        k += 1
        Mv[k] += 0.111111111111111*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555555*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0277777777777778*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0128571428571429*h**3*lex*rho/ley - 0.0371428571428571*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho + 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 - 0.00523809523809524*h**2*ley**2 + 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0371428571428571*h**3*lex*rho/ley + 0.0371428571428571*h**3*ley*rho/lex + 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho - 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0371428571428571*h**3*lex*rho/ley + 0.0128571428571429*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho - 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 - 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0128571428571429*h**3*lex*rho/ley - 0.0128571428571429*h**3*ley*rho/lex + 0.0165306122448979*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho + 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 - 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho - 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000714285714285714*h**3*lex**3*rho/ley - 0.00103174603174603*h**3*lex*ley*rho - 0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho - 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000952380952380952*h**3*lex**3*rho/ley + 0.00412698412698413*h**3*lex*ley*rho + 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho - 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000952380952380952*h**3*lex**3*rho/ley + 0.00142857142857143*h**3*lex*ley*rho + 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 - 0.000343915343915344*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho - 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000714285714285714*h**3*lex**3*rho/ley - 0.000357142857142857*h**3*lex*ley*rho - 0.000918367346938778*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-5.95238095238095e-5*h**2*lex**2 + 8.59788359788358e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 - 0.00523809523809524*h**2*ley**2 + 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00142857142857143*h**2*lex**2 - 0.000952380952380952*h**2*ley**2 + 0.00122448979591837*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000343915343915344*h**2*lex**2 - 7.93650793650794e-5*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00412698412698413*h**2*lex**2 + 0.000952380952380952*h**2*ley**2 + 0.00353741496598639*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.0030952380952381*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 + 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.00103174603174603*h**2*lex**2 + 0.000714285714285714*h**2*ley**2 + 0.0026530612244898*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 + 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000357142857142856*h**2*lex**2 + 0.000714285714285715*h**2*ley**2 - 0.000918367346938775*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(-8.59788359788359e-5*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000343915343915344*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(7.93650793650794e-5*h**2*lex**2 + 2.64550264550264e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(0.000105820105820106*h**2*lex**2 + 0.000105820105820106*h**2*ley**2 + 9.0702947845805e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-7.93650793650794e-5*h**2*lex**2 + 0.000343915343915344*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(2.64550264550265e-5*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 - 8.59788359788358e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(8.59788359788359e-5*h**2*lex**2 - 5.95238095238097e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(1.98412698412698e-5*h**2*lex**2 + 1.98412698412698e-5*h**2*ley**2 + 5.10204081632653e-5*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0277777777777778*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555555*h*lex*ley*rho
        k += 1
        Mv[k] += 0.111111111111111*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555556*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0277777777777778*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555555*h*lex*ley*rho
        k += 1
        Mv[k] += 0.111111111111111*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555556*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0128571428571429*h**3*lex*rho/ley - 0.0128571428571429*h**3*ley*rho/lex + 0.0165306122448979*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho + 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 + 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0371428571428571*h**3*lex*rho/ley + 0.0128571428571429*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho - 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.0030952380952381*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 + 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0371428571428571*h**3*lex*rho/ley + 0.0371428571428571*h**3*ley*rho/lex + 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho - 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += -h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0128571428571429*h**3*lex*rho/ley - 0.0371428571428571*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho + 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 - 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho - 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000714285714285714*h**3*lex**3*rho/ley - 0.000357142857142857*h**3*lex*ley*rho - 0.000918367346938778*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 - 8.59788359788358e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho - 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000952380952380952*h**3*lex**3*rho/ley + 0.00142857142857143*h**3*lex*ley*rho + 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-7.93650793650794e-5*h**2*lex**2 + 0.000343915343915344*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho - 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000952380952380952*h**3*lex**3*rho/ley + 0.00412698412698413*h**3*lex*ley*rho + 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho - 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000714285714285714*h**3*lex**3*rho/ley - 0.00103174603174603*h**3*lex*ley*rho - 0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 - 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000357142857142856*h**2*lex**2 + 0.000714285714285715*h**2*ley**2 - 0.000918367346938775*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(-8.59788359788359e-5*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 - 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.00103174603174603*h**2*lex**2 + 0.000714285714285714*h**2*ley**2 + 0.0026530612244898*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00412698412698413*h**2*lex**2 + 0.000952380952380952*h**2*ley**2 + 0.00353741496598639*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 - 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00142857142857143*h**2*lex**2 - 0.000952380952380952*h**2*ley**2 + 0.00122448979591837*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000343915343915344*h**2*lex**2 - 7.93650793650794e-5*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-5.95238095238095e-5*h**2*lex**2 + 8.59788359788358e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(8.59788359788359e-5*h**2*lex**2 - 5.95238095238097e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(1.98412698412698e-5*h**2*lex**2 + 1.98412698412698e-5*h**2*ley**2 + 5.10204081632653e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 - 0.000343915343915344*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(2.64550264550265e-5*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(0.000105820105820106*h**2*lex**2 + 0.000105820105820106*h**2*ley**2 + 9.0702947845805e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000343915343915344*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(7.93650793650794e-5*h**2*lex**2 + 2.64550264550264e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0555555555555555*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0277777777777778*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555556*h*lex*ley*rho
        k += 1
        Mv[k] += 0.111111111111111*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555555*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0277777777777778*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0555555555555556*h*lex*ley*rho
        k += 1
        Mv[k] += 0.111111111111111*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0371428571428571*h**3*lex*rho/ley + 0.0128571428571429*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho + 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.0030952380952381*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 + 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0128571428571429*h**3*lex*rho/ley - 0.0128571428571429*h**3*ley*rho/lex + 0.0165306122448979*h*lex*ley*rho
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho - 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 + 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0128571428571429*h**3*lex*rho/ley - 0.0371428571428571*h**3*ley*rho/lex + 0.0477551020408163*h*lex*ley*rho
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho - 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 - 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0371428571428571*h**3*lex*rho/ley + 0.0371428571428571*h**3*ley*rho/lex + 0.137959183673469*h*lex*ley*rho
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho + 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += -h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -0.00523809523809524*h**3*lex**2*rho/ley + 0.00107142857142857*h**3*ley*rho + 0.00673469387755102*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000952380952380952*h**3*lex**3*rho/ley + 0.00142857142857143*h**3*lex*ley*rho + 0.00122448979591837*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000436507936507937*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 + 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-7.93650793650794e-5*h**2*lex**2 + 0.000343915343915344*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -0.0030952380952381*h**3*lex**2*rho/ley - 0.00107142857142857*h**3*ley*rho + 0.0039795918367347*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000714285714285714*h**3*lex**3*rho/ley - 0.000357142857142857*h**3*lex*ley*rho - 0.000918367346938778*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 - 8.59788359788358e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += 0.0030952380952381*h**3*lex**2*rho/ley - 0.0030952380952381*h**3*ley*rho + 0.0114965986394558*h*lex**2*ley*rho
        k += 1
        Mv[k] += -0.000714285714285714*h**3*lex**3*rho/ley - 0.00103174603174603*h**3*lex*ley*rho - 0.0026530612244898*h*lex**3*ley*rho
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += 0.00523809523809524*h**3*lex**2*rho/ley + 0.0030952380952381*h**3*ley*rho + 0.0194557823129252*h*lex**2*ley*rho
        k += 1
        Mv[k] += 0.000952380952380952*h**3*lex**3*rho/ley + 0.00412698412698413*h**3*lex*ley*rho + 0.00353741496598639*h*lex**3*ley*rho
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.0030952380952381*h**2*lex**2 - 0.0030952380952381*h**2*ley**2 - 0.0114965986394558*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.00103174603174603*h**2*lex**2 + 0.000714285714285714*h**2*ley**2 + 0.0026530612244898*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.00107142857142857*h**2*lex**2 + 0.0030952380952381*h**2*ley**2 - 0.00397959183673469*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 + 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-0.000357142857142856*h**2*lex**2 + 0.000714285714285715*h**2*ley**2 - 0.000918367346938775*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(8.59788359788359e-5*h**2*lex**2 - 5.95238095238097e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.00107142857142857*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 - 0.00673469387755102*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 - 0.000436507936507937*h**2*ley**2 + 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00142857142857143*h**2*lex**2 - 0.000952380952380952*h**2*ley**2 + 0.00122448979591837*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(-0.000343915343915344*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*rho*(0.0030952380952381*h**2*lex**2 + 0.00523809523809524*h**2*ley**2 + 0.0194557823129252*lex**2*ley**2)/lex
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.00412698412698413*h**2*lex**2 + 0.000952380952380952*h**2*ley**2 + 0.00353741496598639*lex**2*ley**2)/lex
        k += 1
        Mv[k] += h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000436507936507937*h**2*lex**2 - 0.000257936507936508*h**2*ley**2 - 0.00162131519274377*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(7.93650793650794e-5*h**2*lex**2 - 0.000343915343915344*h**2*ley**2 - 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*ley*rho*(0.000145502645502645*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(2.64550264550265e-5*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(0.000257936507936508*h**2*lex**2 + 0.000257936507936508*h**2*ley**2 - 0.000958049886621315*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(-5.95238095238095e-5*h**2*lex**2 + 8.59788359788358e-5*h**2*ley**2 + 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(-8.59788359788359e-5*h**2*lex**2 + 5.95238095238097e-5*h**2*ley**2 - 0.00022108843537415*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(1.98412698412698e-5*h**2*lex**2 + 1.98412698412698e-5*h**2*ley**2 + 5.10204081632653e-5*lex**2*ley**2)
        k += 1
        Mv[k] += h*rho*(-0.000257936507936508*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 - 0.00162131519274376*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*rho*(5.95238095238095e-5*h**2*lex**2 + 0.000145502645502645*h**2*ley**2 + 0.000374149659863946*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000343915343915344*h**2*lex**2 - 7.93650793650794e-5*h**2*ley**2 + 0.000294784580498866*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*ley*rho*(7.93650793650794e-5*h**2*lex**2 + 2.64550264550264e-5*h**2*ley**2 + 6.80272108843538e-5*lex**2*ley**2)
        k += 1
        Mv[k] += -h*rho*(0.000436507936507937*h**2*lex**2 + 0.000436507936507937*h**2*ley**2 + 0.0027437641723356*lex**2*ley**2)
        k += 1
        Mv[k] += -h*lex*rho*(7.93650793650794e-5*h**2*lex**2 + 0.000582010582010582*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*ley*rho*(0.000582010582010582*h**2*lex**2 + 7.93650793650794e-5*h**2*ley**2 + 0.000498866213151927*lex**2*ley**2)
        k += 1
        Mv[k] += h*lex*ley*rho*(0.000105820105820106*h**2*lex**2 + 0.000105820105820106*h**2*ley**2 + 9.0702947845805e-5*lex**2*ley**2)
